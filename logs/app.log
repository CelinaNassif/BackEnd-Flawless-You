2025-03-12T09:22:28.776+02:00  INFO 7392 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 7392 (C:\Users\fatim\Desktop\university\year4-2\seminar\backend\target\classes started by fatima in C:\Users\fatim\Desktop\university\year4-2\seminar\backend)
2025-03-12T09:22:28.799+02:00 DEBUG 7392 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-12T09:22:28.803+02:00  INFO 7392 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-12T09:22:41.393+02:00  INFO 7392 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-12T09:22:41.536+02:00  INFO 7392 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-12T09:22:41.590+02:00  INFO 7392 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-12T09:22:43.021+02:00  INFO 7392 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-12T09:22:43.122+02:00  INFO 7392 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 14045 ms
2025-03-12T09:22:50.641+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:50.680+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:50.974+02:00 DEBUG 7392 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-12T09:22:50.978+02:00 DEBUG 7392 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-12T09:22:51.079+02:00  INFO 7392 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-12T09:22:51.837+02:00  INFO 7392 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-12T09:22:51.840+02:00  WARN 7392 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-12T09:22:55.628+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:55.653+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:55.661+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:55.669+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:55.749+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:55.780+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:55.805+02:00 DEBUG 7392 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T09:22:56.040+02:00 DEBUG 7392 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 55 mappings in 'requestMappingHandlerMapping'
2025-03-12T09:22:57.216+02:00 DEBUG 7392 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-12T09:22:58.642+02:00  INFO 7392 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-12T09:22:59.636+02:00 DEBUG 7392 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-12T09:23:00.409+02:00 DEBUG 7392 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-12T09:23:00.802+02:00 DEBUG 7392 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-12T09:23:03.443+02:00  INFO 7392 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-12T09:23:03.520+02:00  INFO 7392 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 37.419 seconds (process running for 41.53)
2025-03-12T09:26:28.039+02:00  INFO 7392 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-12T09:26:28.072+02:00  INFO 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-12T09:26:28.086+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-12T09:26:28.086+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-12T09:26:28.086+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-12T09:26:28.273+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2aa65672
2025-03-12T09:26:28.276+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@1802f60c
2025-03-12T09:26:28.276+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-12T09:26:28.276+02:00  INFO 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 200 ms
2025-03-12T09:26:28.561+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-12T09:26:28.662+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T09:26:28.713+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-12T09:26:28.727+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-12T09:26:28.739+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-12T09:26:29.190+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@309b2e1]
2025-03-12T09:26:34.627+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:34.826+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-12T09:26:35.072+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:35.075+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@52bcbd9d]
2025-03-12T09:26:35.126+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:35.696+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-12T09:26:36.174+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:36.180+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-12T09:26:36.180+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-12T09:26:36.180+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-12T09:26:36.198+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:36.481+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-12T09:26:36.489+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T09:26:36.495+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-12T09:26:36.497+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-12T09:26:36.497+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-12T09:26:36.497+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@4305d296]
2025-03-12T09:26:36.650+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:36.653+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@57f25aae]
2025-03-12T09:26:36.661+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:37.067+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:37.261+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-12T09:26:37.266+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:37.269+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@6820cd34]
2025-03-12T09:26:37.274+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:37.653+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-12T09:26:37.695+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T09:26:37.797+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T09:26:37.927+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T09:26:37.929+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T09:26:37.943+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:37.953+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-12T09:26:37.955+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-12T09:26:37.959+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-12T09:26:37.993+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:38.012+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T09:26:38.472+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:38.490+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T09:26:38.490+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T09:26:38.490+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T09:26:38.494+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:38.523+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:38.523+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T09:26:38.523+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T09:26:38.523+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T09:26:38.549+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:38.581+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:38.585+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T09:26:38.587+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T09:26:38.589+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T09:26:38.599+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:38.778+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:38.791+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T09:26:38.791+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T09:26:38.794+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T09:26:38.809+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:38.912+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:38.912+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@40fcd267]
2025-03-12T09:26:38.928+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:39.001+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:39.009+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T09:26:39.009+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T09:26:39.009+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T09:26:39.020+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:41.536+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:41.729+02:00  WARN 7392 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.031+02:00  WARN 7392 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.183+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.297+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.359+02:00  WARN 7392 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.366+02:00  WARN 7392 --- [http-nio-8080-exec-3] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.492+02:00  WARN 7392 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:42.966+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.523+02:00  WARN 7392 --- [http-nio-8080-exec-3] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.527+02:00  WARN 7392 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.531+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.616+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.680+02:00  WARN 7392 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.640+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:43.682+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@611ddbd9, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T09:26:43.745+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:43.761+02:00  WARN 7392 --- [http-nio-8080-exec-3] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:43.865+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:44.304+02:00  WARN 7392 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:44.304+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:44.319+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:44.319+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@758d5afa, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T09:26:44.323+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:44.357+02:00  WARN 7392 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:44.359+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:44.362+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@32e5acef, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T09:26:44.369+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:44.461+02:00  WARN 7392 --- [http-nio-8080-exec-3] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:44.463+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:44.463+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@493d9e29, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T09:26:44.463+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:44.494+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:44.496+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:44.501+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:44.526+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:44.532+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:44.532+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T09:26:44.534+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:44.572+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:44.621+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T09:26:44.621+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:44.621+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@2e822169, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T09:26:44.635+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:44.674+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:45.074+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:45.076+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:45.079+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T09:26:45.079+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:45.099+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:45.274+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:45.277+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:45.279+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T09:26:45.282+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:45.286+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:45.295+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:45.299+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T09:26:45.307+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:45.314+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:45.331+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:45.339+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:45.345+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T09:26:45.351+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T09:26:45.357+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:45.381+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:45.883+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:45.886+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:45.890+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:46.124+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:46.136+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:46.140+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:46.144+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:46.188+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:46.854+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:46.870+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:46.872+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:46.898+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:47.077+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.077+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:47.079+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T09:26:47.081+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:47.081+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.087+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T09:26:47.093+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:47.099+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:47.118+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.132+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:47.126+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.146+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.874+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:47.882+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.886+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T09:26:47.888+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:47.894+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:47.938+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:47.942+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.944+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T09:26:47.948+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:47.963+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:47.965+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:47.975+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:47.977+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T09:26:47.981+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T09:26:47.979+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:47.991+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:47.995+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:48.014+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:48.202+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:48.668+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:48.671+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:48.673+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:48.869+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:48.882+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:48.882+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:48.994+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:48.996+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:48.998+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:48.998+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T09:26:49.000+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:49.011+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:49.024+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:49.044+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:49.044+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:49.048+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:49.167+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:49.438+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:49.442+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:49.450+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:49.486+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:49.623+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:49.627+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:49.627+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T09:26:49.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:49.645+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:49.810+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:49.813+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:49.824+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:49.828+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T09:26:49.820+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:49.831+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T09:26:49.829+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:49.835+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:49.851+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:49.851+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:50.024+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:50.027+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T09:26:50.028+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T09:26:50.029+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:50.040+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:50.407+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:50.409+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:50.415+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:50.516+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:50.810+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:50.812+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:50.817+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:51.058+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.187+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:51.191+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.193+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T09:26:51.193+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:51.202+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:51.280+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:51.280+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:51.287+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:51.315+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:51.315+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:51.319+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:51.361+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.371+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:51.371+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.373+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:51.373+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:51.379+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:51.381+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.383+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T09:26:51.383+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:51.392+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:51.408+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.697+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:51.701+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.707+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:51.709+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T09:26:51.709+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:51.709+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.709+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T09:26:51.716+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:51.729+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:51.731+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:51.853+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:51.857+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T09:26:51.859+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T09:26:51.859+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:51.869+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:51.963+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:51.973+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:51.975+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:51.997+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:52.004+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:52.008+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:52.085+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.090+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.216+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:52.216+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:52.222+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:52.375+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:52.375+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:52.382+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:52.382+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:52.382+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:52.386+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.388+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:52.388+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:52.390+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T09:26:52.393+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:52.413+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:52.446+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:52.448+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.450+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T09:26:52.454+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:52.468+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:52.454+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.498+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.498+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.810+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:52.813+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.815+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T09:26:52.819+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:52.821+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:52.821+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:52.831+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:52.832+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:52.834+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.839+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T09:26:52.840+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:52.841+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:52.843+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T09:26:52.848+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T09:26:52.849+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:52.859+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:52.863+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:52.864+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:52.933+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:52.933+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:52.934+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:52.937+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:52.967+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.193+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:53.193+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.193+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T09:26:53.199+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:53.209+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:53.250+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:53.252+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.252+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T09:26:53.252+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:53.258+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:53.282+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:53.282+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:53.286+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:53.332+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.379+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:53.381+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:53.385+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:53.452+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.458+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:53.458+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:53.462+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:53.487+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.572+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:53.572+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.572+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T09:26:53.572+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:53.590+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:53.682+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:53.684+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.689+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T09:26:53.693+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:53.702+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:53.753+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:53.758+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:53.758+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:53.796+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:26:53.805+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T09:26:53.807+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T09:26:53.811+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T09:26:53.820+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:26:53.824+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:53.828+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:53.830+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:54.117+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:54.119+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:54.121+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:54.127+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:54.127+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:54.127+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:26:54.241+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:26:54.241+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T09:26:54.241+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T09:27:28.045+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-12T09:27:28.301+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T09:27:28.301+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-12T09:27:28.308+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=NORMAL", parameters={masked}
2025-03-12T09:27:28.308+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-12T09:27:28.330+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [{WRINKLES=99.5, PIGMENTATION=0.5, ACNE=0.0, NORMAL=0.0}]
2025-03-12T09:27:28.346+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T09:27:29.093+02:00  INFO 7392 --- [http-nio-8080-exec-2] c.f.b.e.S.SkinAnalysisService            : SkinAnalysis saved with ID: 7f03a719-5059-4130-8b5f-b34f6b254b51
2025-03-12T09:27:29.112+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T09:27:29.112+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis@7a2e37a3]
2025-03-12T09:27:29.134+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:43.383+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-12T10:07:43.509+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T10:07:43.541+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-12T10:07:43.570+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-12T10:07:43.588+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-12T10:07:43.811+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@6a910069]
2025-03-12T10:07:46.259+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:46.434+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-12T10:07:46.560+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:46.576+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@2e6b127b]
2025-03-12T10:07:46.594+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:46.719+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-12T10:07:47.539+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:47.545+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-12T10:07:47.547+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-12T10:07:47.549+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-12T10:07:47.592+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:47.873+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:47.875+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@38e00288]
2025-03-12T10:07:47.879+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:48.904+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T10:07:49.120+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T10:07:49.153+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:49.160+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T10:07:49.160+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T10:07:49.164+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T10:07:49.183+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:49.198+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T10:07:49.204+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-12T10:07:49.714+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:49.718+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T10:07:49.719+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T10:07:49.725+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T10:07:49.738+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:49.976+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:49.978+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T10:07:49.979+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T10:07:49.981+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T10:07:50.009+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:50.093+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:50.100+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-12T10:07:50.100+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-12T10:07:50.100+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-12T10:07:50.111+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:52.711+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:53.201+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:53.249+02:00  WARN 7392 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:53.500+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:53.966+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:53.970+02:00  WARN 7392 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:54.027+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:54.281+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:54.345+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:54.376+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:54.376+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@6355db1b, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T10:07:54.376+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:54.535+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:54.772+02:00  WARN 7392 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:54.815+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:54.913+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:55.116+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:55.116+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:55.116+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T10:07:55.116+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:55.158+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:55.387+02:00  WARN 7392 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:55.387+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:55.387+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@4ed9903d, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T10:07:55.397+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:55.587+02:00  WARN 7392 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:55.587+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:55.587+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:55.603+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:55.603+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@46b513a9, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T10:07:55.603+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:55.667+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:55.959+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:07:55.959+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:55.959+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@1a8e7e4e, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-12T10:07:55.959+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:56.070+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:56.368+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:56.372+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:56.372+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T10:07:56.391+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:56.391+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:56.391+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:56.391+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T10:07:56.399+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:56.399+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:56.409+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:56.447+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:56.447+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:56.450+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:56.504+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:56.504+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:07:56.510+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T10:07:56.510+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:56.520+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:56.549+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:57.280+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:57.284+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:57.286+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T10:07:57.289+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:57.309+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:57.317+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:57.319+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:57.322+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:57.444+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:57.734+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:57.734+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:57.738+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:57.815+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:57.999+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:58.003+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:58.008+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:58.083+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:58.083+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:58.083+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T10:07:58.083+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:58.099+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:58.289+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:58.289+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:58.289+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:58.289+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T10:07:58.289+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:58.301+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:58.607+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:58.609+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:58.609+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:58.671+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:07:58.859+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:58.859+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:07:58.859+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T10:07:58.875+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:58.875+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:59.164+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:07:59.164+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:07:59.168+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T10:07:59.170+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:07:59.188+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:07:59.459+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:59.459+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:59.459+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:59.644+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:07:59.644+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:07:59.644+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:07:59.647+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:07:59.683+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:08:00.579+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:00.591+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:08:00.591+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T10:08:00.593+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:00.595+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:00.686+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:00.686+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:00.702+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:00.702+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:08:00.702+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T10:08:00.702+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:00.702+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:00.702+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:00.828+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:00.828+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:00.828+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:00.860+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:08:00.860+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:01.463+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:01.463+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:08:01.463+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T10:08:01.463+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:01.484+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:01.668+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:01.668+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:01.668+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T10:08:01.682+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:01.691+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:01.700+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:01.700+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:01.704+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:01.779+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:02.115+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:02.116+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:02.121+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:02.219+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:02.520+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:02.525+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:02.525+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T10:08:02.527+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:02.534+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:02.568+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:02.568+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:02.568+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:02.710+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:02.868+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:02.868+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:02.868+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T10:08:02.884+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:02.894+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:03.012+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:03.012+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:03.012+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:03.138+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:03.328+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:03.328+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:08:03.328+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T10:08:03.328+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:03.343+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:03.679+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:03.679+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:03.679+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:03.792+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:03.808+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:03.808+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T10:08:03.815+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:03.822+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:03.840+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:04.094+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:04.094+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:04.094+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:04.302+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:04.307+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:04.307+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:04.307+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T10:08:04.312+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:04.322+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:04.626+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:04.628+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:04.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:04.676+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:04.679+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:04.681+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T10:08:04.682+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:04.697+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:04.732+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:05.055+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:05.055+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:05.055+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:05.107+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:05.622+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:05.622+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:05.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:08:05.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T10:08:05.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:05.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:05.629+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:05.674+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:05.812+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:05.928+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:05.944+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:05.944+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T10:08:05.944+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:05.964+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:06.583+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:06.586+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:06.588+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:06.591+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T10:08:06.593+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:06.593+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:06.593+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:06.615+02:00  INFO 7392 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:06.678+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:06.793+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:06.793+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:06.793+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:06.895+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:06.895+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:06.897+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:06.921+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:06.927+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:06.927+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:06.927+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T10:08:06.927+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:06.943+02:00  INFO 7392 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:07.098+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:07.100+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:07.104+02:00 DEBUG 7392 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:07.257+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:07.262+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:08:07.266+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T10:08:07.275+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:08:07.304+02:00  INFO 7392 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:07.502+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:07.507+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:07.511+02:00 DEBUG 7392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:07.970+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:07.970+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:08:07.974+02:00 DEBUG 7392 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:09.132+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T10:08:09.383+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:09.387+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T10:08:09.389+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=OILY", parameters={masked}
2025-03-12T10:08:09.389+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-12T10:08:09.395+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [{WRINKLES=0.0, PIGMENTATION=40.85, ACNE=59.15, NORMAL=0.0}]
2025-03-12T10:08:09.407+02:00  INFO 7392 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:10.292+02:00  INFO 7392 --- [http-nio-8080-exec-9] c.f.b.e.S.SkinAnalysisService            : SkinAnalysis saved with ID: b976da84-ae67-48ef-82a5-8811992f7e54
2025-03-12T10:08:10.305+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:10.308+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis@76783295]
2025-03-12T10:08:10.317+02:00 DEBUG 7392 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:08:45.224+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/routines/by-time
2025-03-12T10:08:45.246+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/routines/userRoutine
2025-03-12T10:08:45.467+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:45.469+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/routines/by-time
2025-03-12T10:08:45.469+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/api/routines/by-time", parameters={}
2025-03-12T10:08:45.469+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.RoutineController#getRoutineWithProductsByTime(HttpServletRequest)
2025-03-12T10:08:45.507+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:45.569+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:08:45.569+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/routines/userRoutine
2025-03-12T10:08:45.569+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/api/routines/userRoutine", parameters={}
2025-03-12T10:08:45.569+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.RoutineController#getAllRoutinesForUser(HttpServletRequest)
2025-03-12T10:08:45.582+02:00  INFO 7392 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:08:46.099+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Failed to complete request: java.lang.Exception: No routine found for the given user ID
2025-03-12T10:08:46.106+02:00 ERROR 7392 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.Exception: No routine found for the given user ID] with root cause

java.lang.Exception: No routine found for the given user ID
	at com.flawlessyou.backend.entity.routine.RoutineService.getRoutineUser(RoutineService.java:98) ~[classes/:na]
	at com.flawlessyou.backend.controllers.RoutineController.getAllRoutinesForUser(RoutineController.java:64) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

<<<<<<< HEAD
2025-03-12T10:08:46.215+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-03-12T10:08:46.219+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-03-12T10:08:46.224+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for GET "/error", parameters={}
2025-03-12T10:08:46.226+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-12T10:08:46.259+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:46.265+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed Mar 12 10:08:46 EET 2025, status=500, error=Internal Server Error, path=/api/routines (truncated)...]
2025-03-12T10:08:46.292+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 500
2025-03-12T10:08:46.293+02:00 DEBUG 7392 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T10:08:46.306+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:08:46.307+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:08:46.309+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:08:46.311+02:00  WARN 7392 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:08:46.315+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:08:46.321+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [{MORNING=[com.flawlessyou.backend.entity.product.Product@63a7d40f], NIGHT=[com.flawlessyou.backend.e (truncated)...]
2025-03-12T10:08:46.330+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:02.236+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/userReview
2025-03-12T10:09:02.459+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:02.474+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/userReview
2025-03-12T10:09:02.474+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/userReview", parameters={}
2025-03-12T10:09:02.474+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getUserReviewForProduct(String, HttpServletRequest)
2025-03-12T10:09:02.490+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:02.967+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:02.967+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [0]
2025-03-12T10:09:02.973+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:05.247+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing PUT /product/Z7YrDqHlTp615ubRAz0j/reviews
2025-03-12T10:09:05.469+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:05.469+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured PUT /product/Z7YrDqHlTp615ubRAz0j/reviews
2025-03-12T10:09:05.479+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : PUT "/product/Z7YrDqHlTp615ubRAz0j/reviews", parameters={}
2025-03-12T10:09:05.479+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#updateUserReview(String, HttpServletRequest, Map)
2025-03-12T10:09:05.487+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [{rating=2}]
2025-03-12T10:09:05.487+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:06.695+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:06.710+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [2]
2025-03-12T10:09:06.713+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:10.191+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/userReview
2025-03-12T10:09:10.421+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:10.425+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/userReview
2025-03-12T10:09:10.430+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/userReview", parameters={}
2025-03-12T10:09:10.434+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getUserReviewForProduct(String, HttpServletRequest)
2025-03-12T10:09:10.448+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:10.866+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:10.866+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [2]
2025-03-12T10:09:10.866+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:19.067+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/random?limit=6
2025-03-12T10:09:19.470+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:19.476+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/random?limit=6
2025-03-12T10:09:19.478+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/random?limit=6", parameters={masked}
2025-03-12T10:09:19.478+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getRandomProducts(int)
2025-03-12T10:09:19.856+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:09:19.856+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:09:19.856+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:09:19.856+02:00  WARN 7392 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-12T10:09:19.866+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:19.866+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@e40fe3f, com.flawlessyou.backend.entity.product.Prod (truncated)...]
2025-03-12T10:09:19.871+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:20.131+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:09:20.357+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:20.360+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-12T10:09:20.360+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-12T10:09:20.361+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:09:20.369+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:20.794+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:20.794+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:09:20.794+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:20.968+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:09:21.192+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:21.192+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-12T10:09:21.192+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-12T10:09:21.192+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:09:21.211+02:00  INFO 7392 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:21.669+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:21.669+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:09:21.669+02:00 DEBUG 7392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:21.793+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:09:22.101+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:22.101+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-12T10:09:22.106+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-12T10:09:22.106+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:09:22.110+02:00  INFO 7392 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:22.539+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:22.539+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:09:22.539+02:00 DEBUG 7392 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:22.818+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:09:23.090+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:23.092+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-12T10:09:23.094+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-12T10:09:23.094+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:09:23.098+02:00  INFO 7392 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:23.528+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:23.530+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:09:23.534+02:00 DEBUG 7392 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:23.680+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:09:23.886+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:23.902+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-12T10:09:23.902+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-12T10:09:23.902+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:09:23.912+02:00  INFO 7392 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:24.454+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:24.456+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:09:24.456+02:00 DEBUG 7392 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T10:09:24.544+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:09:24.774+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T10:09:24.776+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-12T10:09:24.776+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-12T10:09:24.778+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-12T10:09:24.784+02:00  INFO 7392 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-12T10:09:25.180+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T10:09:25.180+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-12T10:09:25.180+02:00 DEBUG 7392 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
=======
2025-03-12T12:21:01.957+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-03-12T12:21:01.960+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-03-12T12:21:01.960+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for GET "/error", parameters={}
2025-03-12T12:21:01.961+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-12T12:21:02.002+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T12:21:02.007+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Wed Mar 12 12:21:01 IST 2025, status=500, error=Internal Server Error, path=/api/skin-ana (truncated)...]
2025-03-12T12:21:02.014+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 500
2025-03-12T12:21:02.028+02:00 DEBUG 23508 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:27:41.410+02:00  WARN 23508 --- [grpc-default-executor-3] io.grpc.internal.ManagedChannelImpl      : [Channel<1>: (firestore.googleapis.com:443)] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host firestore.googleapis.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: No such host is known (firestore.googleapis.com)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:223)
	at io.grpc.internal.DnsNameResolver.doResolve(DnsNameResolver.java:282)
	at io.grpc.grpclb.GrpclbNameResolver.doResolve(GrpclbNameResolver.java:63)
	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:318)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: No such host is known (firestore.googleapis.com)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:632)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:219)
	... 6 more
}
2025-03-12T12:27:42.848+02:00  WARN 23508 --- [grpc-default-executor-3] io.grpc.internal.ManagedChannelImpl      : [Channel<1>: (firestore.googleapis.com:443)] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host firestore.googleapis.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: firestore.googleapis.com
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:223)
	at io.grpc.internal.DnsNameResolver.doResolve(DnsNameResolver.java:282)
	at io.grpc.grpclb.GrpclbNameResolver.doResolve(GrpclbNameResolver.java:63)
	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:318)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: firestore.googleapis.com
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:632)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:219)
	... 6 more
}
2025-03-12T12:27:44.520+02:00  WARN 23508 --- [grpc-default-executor-3] io.grpc.internal.ManagedChannelImpl      : [Channel<1>: (firestore.googleapis.com:443)] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host firestore.googleapis.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: firestore.googleapis.com
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:223)
	at io.grpc.internal.DnsNameResolver.doResolve(DnsNameResolver.java:282)
	at io.grpc.grpclb.GrpclbNameResolver.doResolve(GrpclbNameResolver.java:63)
	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:318)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: firestore.googleapis.com
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:632)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:219)
	... 6 more
}
2025-03-12T12:32:34.109+02:00  WARN 23508 --- [grpc-default-executor-3] io.grpc.internal.ManagedChannelImpl      : [Channel<1>: (firestore.googleapis.com:443)] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host firestore.googleapis.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: No such host is known (firestore.googleapis.com)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:223)
	at io.grpc.internal.DnsNameResolver.doResolve(DnsNameResolver.java:282)
	at io.grpc.grpclb.GrpclbNameResolver.doResolve(GrpclbNameResolver.java:63)
	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:318)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: No such host is known (firestore.googleapis.com)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:632)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:219)
	... 6 more
}
2025-03-12T12:32:37.402+02:00  WARN 23508 --- [grpc-default-executor-3] io.grpc.internal.ManagedChannelImpl      : [Channel<1>: (firestore.googleapis.com:443)] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host firestore.googleapis.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: firestore.googleapis.com
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:223)
	at io.grpc.internal.DnsNameResolver.doResolve(DnsNameResolver.java:282)
	at io.grpc.grpclb.GrpclbNameResolver.doResolve(GrpclbNameResolver.java:63)
	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:318)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: firestore.googleapis.com
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:632)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:219)
	... 6 more
}
2025-03-12T12:32:43.706+02:00  WARN 23508 --- [grpc-default-executor-3] io.grpc.internal.ManagedChannelImpl      : [Channel<1>: (firestore.googleapis.com:443)] Failed to resolve name. status=Status{code=UNAVAILABLE, description=Unable to resolve host firestore.googleapis.com, cause=java.lang.RuntimeException: java.net.UnknownHostException: firestore.googleapis.com
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:223)
	at io.grpc.internal.DnsNameResolver.doResolve(DnsNameResolver.java:282)
	at io.grpc.grpclb.GrpclbNameResolver.doResolve(GrpclbNameResolver.java:63)
	at io.grpc.internal.DnsNameResolver$Resolve.run(DnsNameResolver.java:318)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: firestore.googleapis.com
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at io.grpc.internal.DnsNameResolver$JdkAddressResolver.resolveAddress(DnsNameResolver.java:632)
	at io.grpc.internal.DnsNameResolver.resolveAddresses(DnsNameResolver.java:219)
	... 6 more
}
2025-03-12T12:38:11.939+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-12T12:38:13.042+02:00  INFO 23508 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:38:13.048+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-12T12:38:13.051+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-12T12:38:13.053+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-12T12:38:13.223+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] o.s.web.method.HandlerMethod             : Could not resolve parameter [0] in public java.lang.String com.flawlessyou.backend.controllers.TreatmentController.createTreatment(com.flawlessyou.backend.entity.treatments.Treatment) throws java.util.concurrent.ExecutionException,java.lang.InterruptedException: JSON parse error: Unrecognized token 'OILY': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
2025-03-12T12:38:13.229+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-12T12:38:13.237+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:38:13.239+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: JSON parse error: Unrecognized token 'OILY': was expecting (JSON String, Number, Array, Objec (truncated)..."]
2025-03-12T12:38:13.246+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized token 'OILY': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')]
2025-03-12T12:38:13.247+02:00 DEBUG 23508 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-12T12:43:58.413+02:00  INFO 11400 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 11400 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-12T12:43:58.413+02:00 DEBUG 11400 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-12T12:43:58.417+02:00  INFO 11400 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-12T12:44:01.271+02:00  INFO 11400 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-12T12:44:01.287+02:00  INFO 11400 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-12T12:44:01.287+02:00  INFO 11400 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-12T12:44:01.407+02:00  INFO 11400 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-12T12:44:01.407+02:00  INFO 11400 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2915 ms
2025-03-12T12:44:02.467+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:02.467+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:02.559+02:00 DEBUG 11400 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-12T12:44:02.562+02:00 DEBUG 11400 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-12T12:44:02.579+02:00  INFO 11400 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-12T12:44:02.690+02:00  INFO 11400 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-12T12:44:02.692+02:00  WARN 11400 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-12T12:44:03.519+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.519+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.519+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.519+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.524+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.524+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.524+02:00 DEBUG 11400 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:03.524+02:00 DEBUG 11400 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-12T12:44:03.794+02:00 DEBUG 11400 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-12T12:44:04.061+02:00  INFO 11400 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-12T12:44:04.283+02:00 DEBUG 11400 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-12T12:44:04.410+02:00 DEBUG 11400 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-12T12:44:04.477+02:00 DEBUG 11400 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-12T12:44:05.013+02:00  INFO 11400 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-12T12:44:05.030+02:00  INFO 11400 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 7.191 seconds (process running for 8.053)
2025-03-12T12:44:06.967+02:00  INFO 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-12T12:44:06.968+02:00  INFO 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-12T12:44:06.968+02:00 DEBUG 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-12T12:44:06.968+02:00 DEBUG 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-12T12:44:06.968+02:00 DEBUG 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-12T12:44:06.970+02:00 DEBUG 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6e664075
2025-03-12T12:44:06.971+02:00 DEBUG 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@9a74a93
2025-03-12T12:44:06.971+02:00 DEBUG 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-12T12:44:06.971+02:00  INFO 11400 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-03-12T12:44:16.378+02:00 DEBUG 11400 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.html
2025-03-12T12:44:16.390+02:00 DEBUG 11400 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.396+02:00 DEBUG 11400 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.html
2025-03-12T12:44:16.399+02:00 DEBUG 11400 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.html", parameters={}
2025-03-12T12:44:16.404+02:00 DEBUG 11400 --- [http-nio-8080-exec-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.430+02:00 DEBUG 11400 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.488+02:00 DEBUG 11400 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui.css
2025-03-12T12:44:16.490+02:00 DEBUG 11400 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.492+02:00 DEBUG 11400 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui.css
2025-03-12T12:44:16.493+02:00 DEBUG 11400 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui.css", parameters={}
2025-03-12T12:44:16.496+02:00 DEBUG 11400 --- [http-nio-8080-exec-2] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.497+02:00 DEBUG 11400 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.css
2025-03-12T12:44:16.498+02:00 DEBUG 11400 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-bundle.js
2025-03-12T12:44:16.498+02:00 DEBUG 11400 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-12T12:44:16.498+02:00 DEBUG 11400 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-initializer.js
2025-03-12T12:44:16.499+02:00 DEBUG 11400 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.500+02:00 DEBUG 11400 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.500+02:00 DEBUG 11400 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.500+02:00 DEBUG 11400 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.503+02:00 DEBUG 11400 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.503+02:00 DEBUG 11400 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-initializer.js
2025-03-12T12:44:16.500+02:00 DEBUG 11400 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-bundle.js
2025-03-12T12:44:16.504+02:00 DEBUG 11400 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-03-12T12:44:16.503+02:00 DEBUG 11400 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.css
2025-03-12T12:44:16.504+02:00 DEBUG 11400 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-12T12:44:16.505+02:00 DEBUG 11400 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.css", parameters={}
2025-03-12T12:44:16.504+02:00 DEBUG 11400 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-03-12T12:44:16.505+02:00 DEBUG 11400 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-03-12T12:44:16.505+02:00 DEBUG 11400 --- [http-nio-8080-exec-6] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.506+02:00 DEBUG 11400 --- [http-nio-8080-exec-4] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.506+02:00 DEBUG 11400 --- [http-nio-8080-exec-5] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.506+02:00 DEBUG 11400 --- [http-nio-8080-exec-7] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.511+02:00 DEBUG 11400 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.518+02:00 DEBUG 11400 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.536+02:00 DEBUG 11400 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.539+02:00 DEBUG 11400 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.679+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs/swagger-config
2025-03-12T12:44:16.680+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.682+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs/swagger-config
2025-03-12T12:44:16.682+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs/swagger-config", parameters={}
2025-03-12T12:44:16.683+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-03-12T12:44:16.689+02:00 DEBUG 11400 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/favicon-32x32.png
2025-03-12T12:44:16.692+02:00 DEBUG 11400 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.694+02:00 DEBUG 11400 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/favicon-32x32.png
2025-03-12T12:44:16.695+02:00 DEBUG 11400 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/favicon-32x32.png", parameters={}
2025-03-12T12:44:16.697+02:00 DEBUG 11400 --- [http-nio-8080-exec-8] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:44:16.701+02:00 DEBUG 11400 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.713+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json]
2025-03-12T12:44:16.717+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-re (truncated)...]
2025-03-12T12:44:16.723+02:00 DEBUG 11400 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:44:16.745+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs
2025-03-12T12:44:16.748+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:44:16.749+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs
2025-03-12T12:44:16.749+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs", parameters={}
2025-03-12T12:44:16.751+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-03-12T12:44:16.754+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:44:16.949+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:16.950+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:16.961+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:16.961+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:16.984+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:16.985+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:16.987+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.Integer>
2025-03-12T12:44:16.987+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:16.989+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:16.989+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:16.989+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:17.032+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.033+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.035+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.035+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.035+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.042+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-12T12:44:17.043+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.046+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.049+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.052+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.053+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.067+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:44:17.070+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.072+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:44:17.073+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.075+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.078+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.097+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.097+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.098+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.102+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:44:17.103+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.105+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:44:17.105+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:17.106+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.106+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:17.116+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:44:17.117+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.117+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:44:17.118+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:44:17.118+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.119+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:44:17.122+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.129+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.147+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.148+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.148+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.148+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.148+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.152+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.153+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.156+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Role
2025-03-12T12:44:17.158+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.176+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.180+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.186+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.187+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.187+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.190+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.User
2025-03-12T12:44:17.193+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.197+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.197+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.199+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.199+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.201+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-12T12:44:17.214+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.217+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-12T12:44:17.225+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Role]
2025-03-12T12:44:17.226+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.226+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Role], com.flawlessyou.backend.entity.user.Role
2025-03-12T12:44:17.229+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.time.LocalDate]
2025-03-12T12:44:17.230+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.231+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.time.LocalDate], java.time.LocalDate
2025-03-12T12:44:17.254+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.255+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.255+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.264+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.297+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.298+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.298+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.299+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.299+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.301+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.302+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.303+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:17.303+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.305+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.307+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.308+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.309+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.312+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.312+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.312+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.314+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:17.314+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.315+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:17.316+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.316+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.316+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.317+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.321+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.330+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.331+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.333+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-12T12:44:17.333+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.333+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.334+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.334+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.338+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.338+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.339+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.339+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.339+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.342+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-12T12:44:17.343+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.344+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.345+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.345+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.345+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.347+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:44:17.347+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.347+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:44:17.347+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.347+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.348+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.350+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.350+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.350+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.352+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:44:17.352+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.352+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:44:17.353+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:17.353+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.353+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:17.354+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:44:17.354+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.354+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:44:17.355+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:44:17.355+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.355+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:44:17.356+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.361+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.368+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.369+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.369+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.369+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.369+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.370+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.371+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.374+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.375+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.377+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.377+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.377+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.379+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.379+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.380+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-12T12:44:17.380+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.384+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.386+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.386+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.386+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.387+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.388+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.389+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.389+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<org.springframework.web.multipart.MultipartFile>
2025-03-12T12:44:17.390+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.390+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class org.springframework.web.multipart.MultipartFile]
2025-03-12T12:44:17.391+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.397+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.397+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.397+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.398+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.398+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.399+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.400+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.400+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.400+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.404+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.405+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.409+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.411+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.413+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.413+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.418+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.419+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.420+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-12T12:44:17.420+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.423+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.425+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.427+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.428+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.428+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.429+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:17.430+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.430+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.431+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.432+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.432+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.433+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.433+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.433+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.434+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:17.434+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.434+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:17.435+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.435+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.435+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.436+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.438+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.446+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.446+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.448+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.450+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.451+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.451+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.465+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.466+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.467+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.467+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.467+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-12T12:44:17.468+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.470+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-12T12:44:17.471+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.471+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.471+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.472+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.473+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.473+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.479+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-12T12:44:17.479+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.479+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:44:17.480+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.480+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:17.480+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.481+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.481+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.481+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.482+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.482+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.482+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.483+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:17.483+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.484+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:17.484+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.484+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.485+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.486+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.489+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.496+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.496+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.498+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>
2025-03-12T12:44:17.498+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.499+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-12T12:44:17.499+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.499+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-12T12:44:17.502+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis
2025-03-12T12:44:17.502+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.503+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.504+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.504+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.505+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.506+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.506+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.506+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.507+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Double]]
2025-03-12T12:44:17.508+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.509+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Double]], java.util.Map
2025-03-12T12:44:17.510+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-12T12:44:17.511+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.511+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-12T12:44:17.514+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]]
2025-03-12T12:44:17.514+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.514+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]], java.util.List
2025-03-12T12:44:17.515+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:44:17.515+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.515+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:17.516+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.518+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:17.518+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.518+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:17.519+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.519+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.519+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.520+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.523+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.533+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.538+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.548+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-12T12:44:17.549+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.549+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.550+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.550+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.550+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.552+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.552+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.553+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.555+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.558+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.565+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<com.flawlessyou.backend.entity.routine.Routine>
2025-03-12T12:44:17.565+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.565+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.Routine]
2025-03-12T12:44:17.566+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.566+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.Routine], com.flawlessyou.backend.entity.routine.Routine
2025-03-12T12:44:17.566+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.567+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.567+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.567+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.568+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.568+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.569+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.570+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.573+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.578+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-12T12:44:17.578+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.579+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.579+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.579+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.582+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.583+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.583+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.583+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.583+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.585+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.SignupRequest
2025-03-12T12:44:17.585+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.590+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.594+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.594+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.595+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.598+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.598+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.599+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.600+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.600+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.600+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.601+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.603+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.610+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.611+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.611+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.611+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.611+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.613+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.LoginRequest
2025-03-12T12:44:17.613+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.614+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.615+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.615+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.615+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.616+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.618+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.630+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.631+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.632+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.632+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.632+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.633+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-12T12:44:17.634+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.634+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.634+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.634+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.639+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.642+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.644+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.644+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.644+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.650+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.650+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.653+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.653+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.661+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.662+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.662+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.663+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.663+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.665+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.665+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.669+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.669+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.671+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.671+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.671+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.678+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.678+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.684+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.684+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.684+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.685+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.685+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.687+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.687+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.695+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-12T12:44:17.695+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.696+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:44:17.696+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.696+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:44:17.697+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.698+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.698+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.699+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.700+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:44:17.700+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.701+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:44:17.701+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:17.701+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.702+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:17.720+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.720+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.721+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.725+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:44:17.727+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.728+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:44:17.729+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:17.729+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.729+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:17.731+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:44:17.731+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.732+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:44:17.732+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:44:17.732+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.733+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:44:17.735+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.744+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.754+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-12T12:44:17.755+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.772+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.780+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.785+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.786+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.786+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.814+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.817+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.817+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:17.817+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.817+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:17.819+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.819+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.827+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.card.Card
2025-03-12T12:44:17.829+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.831+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.833+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.833+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.833+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.835+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-12T12:44:17.835+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.837+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-12T12:44:17.845+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.846+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.846+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.851+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-12T12:44:17.851+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.851+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-12T12:44:17.858+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.863+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.877+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-12T12:44:17.878+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.881+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-12T12:44:17.881+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.881+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-12T12:44:17.882+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.884+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.884+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.884+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.884+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-12T12:44:17.884+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.884+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-12T12:44:17.896+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.896+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.896+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.898+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-12T12:44:17.898+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.898+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-12T12:44:17.898+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.906+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.934+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-12T12:44:17.934+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.937+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-12T12:44:17.943+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.948+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-12T12:44:17.950+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.952+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:17.952+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.952+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:17.963+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-12T12:44:17.963+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.964+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-12T12:44:17.966+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:17.966+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.966+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:17.969+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-12T12:44:17.969+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.969+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-12T12:44:17.975+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.981+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:17.989+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:17.991+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.997+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:17.997+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:17.997+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:18.001+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.001+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:18.037+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:18.039+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.039+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:18.041+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.045+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:18.052+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:18.054+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.054+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:18.056+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.061+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:18.067+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.lang.String>
2025-03-12T12:44:18.067+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.067+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.067+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.067+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.067+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.067+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.075+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.util.Map<java.lang.String, java.lang.String>>
2025-03-12T12:44:18.075+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.075+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]]
2025-03-12T12:44:18.075+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.075+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]], java.util.Map
2025-03-12T12:44:18.075+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.075+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.075+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.080+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.080+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.096+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.096+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.096+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:18.096+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:18.096+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.096+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.112+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.112+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.112+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.112+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-12T12:44:18.112+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.112+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:44:18.112+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.112+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:44:18.112+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.127+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.127+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.127+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.128+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:44:18.128+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.128+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:44:18.128+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:18.128+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.128+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:18.132+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.132+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:44:18.132+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:18.132+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:44:18.132+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:44:18.132+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.144+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:44:18.144+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.144+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.162+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.164+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.164+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.164+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.164+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.171+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:18.171+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.171+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:18.178+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:44:18.178+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.178+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.178+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.192+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.192+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.192+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.192+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.192+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:44:18.203+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:18.203+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.203+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:18.203+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.203+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.203+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.211+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:44:18.211+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.211+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:44:18.213+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:18.213+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.213+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:18.215+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:44:18.215+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.215+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:44:18.215+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:44:18.215+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.215+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:44:18.217+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.227+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.237+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-12T12:44:18.237+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.246+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.248+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.248+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.248+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.250+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.250+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.250+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.252+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.258+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.270+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.routine.RoutineTime, java.util.List<com.flawlessyou.backend.entity.product.Product>>
2025-03-12T12:44:18.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.270+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]]
2025-03-12T12:44:18.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]], java.util.List
2025-03-12T12:44:18.270+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:44:18.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:44:18.270+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.275+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:44:18.275+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.275+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:44:18.275+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:44:18.275+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.275+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:44:18.275+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:44:18.275+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.275+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:44:18.283+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:44:18.283+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.283+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:44:18.285+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:44:18.285+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.287+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:44:18.287+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:44:18.287+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.287+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:44:18.289+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:44:18.294+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.296+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:44:18.296+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:44:18.296+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.296+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:44:18.298+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.303+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:44:18.317+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:18.317+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.317+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:18.319+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.319+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:18.319+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.319+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.327+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:18.329+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.329+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:18.329+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.329+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:18.331+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.331+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.337+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:44:18.337+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.339+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:44:18.339+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.339+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:44:18.345+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.345+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.351+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.351+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.355+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.355+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.357+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.359+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.365+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:44:18.365+02:00 TRACE 11400 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@3ce2c5f6
2025-03-12T12:44:18.383+02:00  INFO 11400 --- [http-nio-8080-exec-10] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 1612 ms
2025-03-12T12:44:18.412+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, */*] and supported [application/json]
2025-03-12T12:44:18.430+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-03-12T12:44:18.432+02:00 DEBUG 11400 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:20.363+02:00  INFO 21656 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 21656 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-12T12:45:20.365+02:00 DEBUG 21656 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-12T12:45:20.367+02:00  INFO 21656 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-12T12:45:22.639+02:00  INFO 21656 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-12T12:45:22.658+02:00  INFO 21656 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-12T12:45:22.660+02:00  INFO 21656 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-12T12:45:22.756+02:00  INFO 21656 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-12T12:45:22.757+02:00  INFO 21656 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2347 ms
2025-03-12T12:45:23.992+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:23.994+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.076+02:00 DEBUG 21656 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-12T12:45:24.077+02:00 DEBUG 21656 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-12T12:45:24.098+02:00  INFO 21656 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-12T12:45:24.206+02:00  INFO 21656 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-12T12:45:24.208+02:00  WARN 21656 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-12T12:45:24.947+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.949+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.950+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.952+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.954+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.955+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.957+02:00 DEBUG 21656 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:24.961+02:00 DEBUG 21656 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-12T12:45:25.202+02:00 DEBUG 21656 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-12T12:45:25.587+02:00  INFO 21656 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-12T12:45:25.807+02:00 DEBUG 21656 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-12T12:45:25.987+02:00 DEBUG 21656 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-12T12:45:26.098+02:00 DEBUG 21656 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-12T12:45:26.793+02:00  INFO 21656 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-12T12:45:26.811+02:00  INFO 21656 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 6.903 seconds (process running for 7.622)
2025-03-12T12:45:29.218+02:00  INFO 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-12T12:45:29.219+02:00  INFO 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-12T12:45:29.220+02:00 DEBUG 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-12T12:45:29.220+02:00 DEBUG 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-12T12:45:29.220+02:00 DEBUG 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-12T12:45:29.221+02:00 DEBUG 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@49c6ee4a
2025-03-12T12:45:29.222+02:00 DEBUG 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@35630ee8
2025-03-12T12:45:29.222+02:00 DEBUG 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-12T12:45:29.222+02:00  INFO 21656 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-03-12T12:45:44.306+02:00 DEBUG 21656 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.html
2025-03-12T12:45:44.320+02:00 DEBUG 21656 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.327+02:00 DEBUG 21656 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.html
2025-03-12T12:45:44.331+02:00 DEBUG 21656 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.html", parameters={}
2025-03-12T12:45:44.335+02:00 DEBUG 21656 --- [http-nio-8080-exec-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.379+02:00 DEBUG 21656 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.405+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui.css
2025-03-12T12:45:44.412+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.409+02:00 DEBUG 21656 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.css
2025-03-12T12:45:44.412+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-bundle.js
2025-03-12T12:45:44.413+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-initializer.js
2025-03-12T12:45:44.414+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui.css
2025-03-12T12:45:44.414+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-12T12:45:44.414+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.415+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.414+02:00 DEBUG 21656 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.415+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui.css", parameters={}
2025-03-12T12:45:44.416+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.415+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-bundle.js
2025-03-12T12:45:44.415+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-initializer.js
2025-03-12T12:45:44.416+02:00 DEBUG 21656 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.css
2025-03-12T12:45:44.417+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-03-12T12:45:44.417+02:00 DEBUG 21656 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.css", parameters={}
2025-03-12T12:45:44.417+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.417+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-03-12T12:45:44.417+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-12T12:45:44.418+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.420+02:00 DEBUG 21656 --- [http-nio-8080-exec-3] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.423+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-03-12T12:45:44.423+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.428+02:00 DEBUG 21656 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.428+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.431+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.448+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.456+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.459+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.570+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs/swagger-config
2025-03-12T12:45:44.572+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/favicon-32x32.png
2025-03-12T12:45:44.573+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.574+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.575+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs/swagger-config
2025-03-12T12:45:44.575+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/favicon-32x32.png
2025-03-12T12:45:44.575+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs/swagger-config", parameters={}
2025-03-12T12:45:44.575+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/favicon-32x32.png", parameters={}
2025-03-12T12:45:44.577+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-03-12T12:45:44.578+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-12T12:45:44.581+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.602+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json]
2025-03-12T12:45:44.609+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-re (truncated)...]
2025-03-12T12:45:44.613+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:45:44.632+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs
2025-03-12T12:45:44.634+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:45:44.637+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs
2025-03-12T12:45:44.638+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs", parameters={}
2025-03-12T12:45:44.639+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-03-12T12:45:44.642+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-12T12:45:44.843+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:44.844+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.855+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:44.855+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.875+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:44.876+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.878+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.Integer>
2025-03-12T12:45:44.878+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.881+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:44.881+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.881+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:44.930+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:44.930+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.932+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:44.932+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.933+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:44.939+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-12T12:45:44.939+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.940+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:44.943+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:44.944+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.944+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:44.953+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:45:44.954+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.956+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:45:44.958+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:44.958+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.958+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:44.973+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:44.973+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.974+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:44.977+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:45:44.977+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.978+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:45:44.978+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:44.978+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.978+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:44.984+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:45:44.985+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.985+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:45:44.988+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:45:44.988+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:44.989+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:45:44.993+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:44.997+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.012+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.013+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.013+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.014+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.014+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.016+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.017+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.018+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Role
2025-03-12T12:45:45.019+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.027+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.028+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.028+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.029+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.029+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.031+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.User
2025-03-12T12:45:45.031+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.033+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.035+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.035+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.037+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.041+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-12T12:45:45.042+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.042+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-12T12:45:45.044+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Role]
2025-03-12T12:45:45.044+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.045+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Role], com.flawlessyou.backend.entity.user.Role
2025-03-12T12:45:45.046+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.time.LocalDate]
2025-03-12T12:45:45.047+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.047+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.time.LocalDate], java.time.LocalDate
2025-03-12T12:45:45.053+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.054+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.054+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.058+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.064+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.077+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.077+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.078+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.078+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.078+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.080+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.080+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.082+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.082+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.083+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.084+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.085+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.085+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.087+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.087+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.088+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.090+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.090+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.090+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.091+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.092+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.092+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.093+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.096+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.104+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.104+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.107+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-12T12:45:45.108+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.108+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.108+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.108+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.113+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.113+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.114+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.114+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.114+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.116+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-12T12:45:45.117+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.118+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.119+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.120+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.120+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.122+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:45:45.123+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.123+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:45:45.123+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.123+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.124+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.125+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.127+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.127+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.129+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:45:45.129+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.129+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:45:45.129+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:45.130+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.130+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:45.131+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:45:45.131+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.132+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:45:45.132+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:45:45.132+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.132+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:45:45.133+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.146+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.158+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.159+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.159+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.159+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.159+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.161+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.161+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.165+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.166+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.166+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.167+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.167+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.169+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.170+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.171+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-12T12:45:45.172+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.177+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.178+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.178+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.179+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.179+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.181+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.181+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.182+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<org.springframework.web.multipart.MultipartFile>
2025-03-12T12:45:45.183+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.183+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class org.springframework.web.multipart.MultipartFile]
2025-03-12T12:45:45.184+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.194+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.195+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.195+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.195+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.195+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.197+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.197+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.198+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.198+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.203+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.204+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.207+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.207+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.209+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.209+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.212+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.213+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.215+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-12T12:45:45.215+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.222+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.222+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.223+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.223+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.223+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.225+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.225+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.227+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.227+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.228+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.228+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.228+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.229+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.229+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.230+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.230+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.230+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.231+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.231+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.231+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.232+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.235+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.243+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.244+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.245+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.245+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.246+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.246+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.249+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.250+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.252+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.252+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.253+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-12T12:45:45.253+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.258+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-12T12:45:45.259+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.259+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.259+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.260+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.261+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.262+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.266+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-12T12:45:45.266+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.267+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:45:45.267+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.268+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.268+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.271+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.272+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.273+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.274+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.275+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.275+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.277+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.277+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.277+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.278+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.278+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.278+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.280+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.282+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.290+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.291+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.292+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>
2025-03-12T12:45:45.293+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.294+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-12T12:45:45.294+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.294+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-12T12:45:45.301+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis
2025-03-12T12:45:45.302+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.306+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.308+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.309+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.309+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.311+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.311+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.311+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.312+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]]
2025-03-12T12:45:45.313+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.313+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]], java.util.Map
2025-03-12T12:45:45.313+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-12T12:45:45.314+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.314+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-12T12:45:45.319+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]]
2025-03-12T12:45:45.324+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.325+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]], java.util.List
2025-03-12T12:45:45.326+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:45:45.327+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.328+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.329+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.335+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.337+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.339+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.343+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.344+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.344+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.346+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.349+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.360+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.364+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.371+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-12T12:45:45.372+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.374+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.375+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.375+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.376+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.378+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.378+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.378+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.380+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.383+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.393+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<com.flawlessyou.backend.entity.routine.Routine>
2025-03-12T12:45:45.393+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.394+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.Routine]
2025-03-12T12:45:45.394+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.394+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.Routine], com.flawlessyou.backend.entity.routine.Routine
2025-03-12T12:45:45.395+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.396+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.396+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.396+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.398+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.398+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.398+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.400+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.405+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.409+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-12T12:45:45.410+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.410+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.411+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.411+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.414+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.414+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.416+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.416+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.416+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.418+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.SignupRequest
2025-03-12T12:45:45.419+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.427+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.429+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.429+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.429+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.434+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.434+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.435+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.437+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.438+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.438+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.440+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.442+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.449+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.449+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.449+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.450+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.450+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.453+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.LoginRequest
2025-03-12T12:45:45.454+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.455+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.457+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.457+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.457+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.459+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.461+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.467+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.468+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.469+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.469+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.471+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.473+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-12T12:45:45.474+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.474+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.475+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.475+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.479+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.480+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.480+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.480+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.481+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.490+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.491+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.494+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.494+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.498+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.498+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.499+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.499+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.499+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.502+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.502+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.510+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.511+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.512+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.513+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.513+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.515+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.515+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.525+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.525+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.526+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.526+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.526+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.528+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.529+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.536+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-12T12:45:45.537+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.538+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:45:45.538+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.539+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:45:45.542+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.542+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.543+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.543+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.545+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:45:45.546+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.549+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:45:45.550+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.551+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.551+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.564+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.572+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.576+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.583+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:45:45.583+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.583+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:45:45.586+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:45.586+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.587+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:45.590+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:45:45.591+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.591+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:45:45.592+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:45:45.592+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.592+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:45:45.594+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.598+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.608+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-12T12:45:45.609+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.613+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.615+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.615+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.621+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.623+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.629+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.630+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.630+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.630+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.630+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.633+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.633+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.642+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.card.Card
2025-03-12T12:45:45.643+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.644+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.645+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.646+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.646+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.649+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-12T12:45:45.649+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.649+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-12T12:45:45.654+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.656+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.656+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.663+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-12T12:45:45.664+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.664+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-12T12:45:45.670+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.677+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.694+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-12T12:45:45.695+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.696+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-12T12:45:45.696+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.696+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-12T12:45:45.696+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.697+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.697+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.698+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.700+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-12T12:45:45.702+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.703+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-12T12:45:45.707+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.708+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.708+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.711+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-12T12:45:45.712+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.712+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-12T12:45:45.713+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.720+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.737+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-12T12:45:45.739+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.740+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-12T12:45:45.740+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.740+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-12T12:45:45.742+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.743+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.743+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.744+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.746+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-12T12:45:45.746+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.746+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-12T12:45:45.747+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.747+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.747+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.750+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-12T12:45:45.750+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.753+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-12T12:45:45.757+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.762+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.770+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.770+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.781+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.782+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.782+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.782+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.783+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.796+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.797+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.797+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.798+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.798+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.809+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:45.810+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.811+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:45.812+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.812+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:45.820+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.lang.String>
2025-03-12T12:45:45.822+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.824+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.826+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.827+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.829+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.829+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.832+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.util.Map<java.lang.String, java.lang.String>>
2025-03-12T12:45:45.833+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.833+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]]
2025-03-12T12:45:45.834+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.834+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]], java.util.Map
2025-03-12T12:45:45.836+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.836+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.836+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.844+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-12T12:45:45.845+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.845+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:45:45.846+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.846+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.846+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.847+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.847+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.848+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.849+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.849+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.849+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.850+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.851+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.852+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.853+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.853+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.853+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.856+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.859+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.863+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.863+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.866+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.867+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.868+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.870+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.870+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.870+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.871+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.873+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.873+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.875+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.875+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.876+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.876+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.877+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.877+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.878+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.880+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.884+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.884+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.891+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-12T12:45:45.891+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.892+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:45:45.892+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.892+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:45:45.892+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.893+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.893+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.893+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.895+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:45:45.895+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.896+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:45:45.896+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.896+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.896+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.898+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.898+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.898+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.901+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:45:45.902+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.903+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:45:45.905+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:45.906+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.907+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:45.908+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:45:45.908+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.909+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:45:45.909+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:45:45.909+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.909+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:45:45.910+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.915+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.922+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.923+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.926+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-12T12:45:45.926+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.927+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-12T12:45:45.927+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.927+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-12T12:45:45.928+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.929+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.929+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.929+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.931+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.931+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.931+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.933+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-12T12:45:45.933+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.933+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-12T12:45:45.936+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.937+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.937+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.939+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.941+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.944+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:45.945+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.948+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-12T12:45:45.949+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.949+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:45:45.949+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.949+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:45:45.950+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.952+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:45.952+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.952+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:45.955+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:45:45.956+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.956+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:45:45.956+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:45.957+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.957+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:45.958+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:45.959+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.959+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:45.961+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:45:45.961+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.961+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:45:45.962+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:45.962+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.962+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:45.963+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:45:45.963+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.964+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:45:45.964+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:45:45.964+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:45.964+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:45:45.965+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:45.971+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.030+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-12T12:45:46.041+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.043+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.056+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:46.057+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.057+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:46.078+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:46.078+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.079+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:46.081+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.085+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.093+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.routine.RoutineTime, java.util.List<com.flawlessyou.backend.entity.product.Product>>
2025-03-12T12:45:46.094+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.094+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]]
2025-03-12T12:45:46.095+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.095+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]], java.util.List
2025-03-12T12:45:46.095+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-12T12:45:46.095+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.096+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-12T12:45:46.096+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.097+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-12T12:45:46.097+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.097+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-12T12:45:46.099+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-12T12:45:46.099+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.099+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-12T12:45:46.099+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-12T12:45:46.099+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.100+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-12T12:45:46.105+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-12T12:45:46.105+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.106+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-12T12:45:46.109+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-12T12:45:46.110+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.110+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-12T12:45:46.110+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-12T12:45:46.110+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.111+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-12T12:45:46.112+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-12T12:45:46.112+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.112+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-12T12:45:46.113+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-12T12:45:46.113+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.113+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-12T12:45:46.114+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.119+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-12T12:45:46.128+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:46.128+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.128+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:46.128+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.128+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:46.130+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.130+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.133+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:46.135+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.135+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:46.135+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.135+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:46.138+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.139+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.149+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-12T12:45:46.150+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.151+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-12T12:45:46.151+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.151+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-12T12:45:46.155+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.155+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.158+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.158+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.160+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.160+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.161+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.161+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.165+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-12T12:45:46.166+02:00 TRACE 21656 --- [http-nio-8080-exec-10] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e2696e8
2025-03-12T12:45:46.176+02:00  INFO 21656 --- [http-nio-8080-exec-10] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 1515 ms
2025-03-12T12:45:46.221+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, */*] and supported [application/json]
2025-03-12T12:45:46.225+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-03-12T12:45:46.227+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:46:00.370+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-12T12:46:00.392+02:00 DEBUG 21656 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:46:00.400+02:00 ERROR 21656 --- [http-nio-8080-exec-5] c.f.b.Security.Jwt.AuthEntryPointJwt     : Unauthorized error: Full authentication is required to access this resource
2025-03-12T12:46:48.420+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-12T12:46:48.420+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-12T12:46:48.420+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-12T12:46:48.420+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-12T12:46:48.420+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-12T12:46:48.462+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@61014812]
2025-03-12T12:46:50.560+02:00  INFO 21656 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:46:50.644+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-12T12:46:50.711+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-12T12:46:50.711+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@89a4694]
2025-03-12T12:46:50.711+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:47:08.836+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-12T12:47:09.068+02:00  INFO 21656 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:47:09.068+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-12T12:47:09.068+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-12T12:47:09.068+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-12T12:47:09.084+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@1ea09a60]
2025-03-12T12:47:09.737+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:47:09.737+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-12T10:47:09.582029000Z"]
2025-03-12T12:47:09.737+02:00 DEBUG 21656 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:48:24.619+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-12T12:48:25.519+02:00  INFO 21656 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:48:25.525+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-12T12:48:25.526+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-12T12:48:25.529+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-12T12:48:25.533+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@9b5d88e]
2025-03-12T12:48:25.885+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:48:25.885+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-12T10:48:25.652246000Z"]
2025-03-12T12:48:25.888+02:00 DEBUG 21656 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:49:01.571+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-12T12:49:01.811+02:00  INFO 21656 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:49:01.813+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-12T12:49:01.814+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-12T12:49:01.815+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-12T12:49:01.815+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@7f16ed26]
2025-03-12T12:49:02.376+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:49:02.376+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-12T10:49:02.231400000Z"]
2025-03-12T12:49:02.378+02:00 DEBUG 21656 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:49:16.768+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-12T12:49:17.107+02:00  INFO 21656 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:49:17.107+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-12T12:49:17.107+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-12T12:49:17.107+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-12T12:49:17.107+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@755e68c7]
2025-03-12T12:49:17.336+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:49:17.338+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-12T10:49:17.192475000Z"]
2025-03-12T12:49:17.340+02:00 DEBUG 21656 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-12T12:50:37.621+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T12:50:37.966+02:00  INFO 21656 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:50:37.966+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T12:50:37.966+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=OILY", parameters={masked}
2025-03-12T12:50:37.966+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-12T12:50:38.001+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.web.method.HandlerMethod             : Could not resolve parameter [2] in public com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis com.flawlessyou.backend.controllers.SkinAnalysisController.recommendTreatments(com.flawlessyou.backend.entity.product.Type,jakarta.servlet.http.HttpServletRequest,java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>) throws java.lang.Exception,java.lang.InterruptedException: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start field name
2025-03-12T12:50:38.001+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-12T12:50:38.017+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:50:38.017+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start  (truncated)..."]
2025-03-12T12:50:38.017+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start field name]
2025-03-12T12:50:38.017+02:00 DEBUG 21656 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-12T12:51:22.513+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T12:51:22.754+02:00  INFO 21656 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:51:22.754+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T12:51:22.754+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=OILY", parameters={masked}
2025-03-12T12:51:22.754+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-12T12:51:22.754+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.method.HandlerMethod             : Could not resolve parameter [2] in public com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis com.flawlessyou.backend.controllers.SkinAnalysisController.recommendTreatments(com.flawlessyou.backend.entity.product.Type,jakarta.servlet.http.HttpServletRequest,java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>) throws java.lang.Exception,java.lang.InterruptedException: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start field name
2025-03-12T12:51:22.774+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-12T12:51:22.774+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:51:22.774+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start  (truncated)..."]
2025-03-12T12:51:22.774+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start field name]
2025-03-12T12:51:22.774+02:00 DEBUG 21656 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-12T12:51:26.106+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T12:51:26.387+02:00  INFO 21656 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=OILY", parameters={masked}
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.web.method.HandlerMethod             : Could not resolve parameter [2] in public com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis com.flawlessyou.backend.controllers.SkinAnalysisController.recommendTreatments(com.flawlessyou.backend.entity.product.Type,jakarta.servlet.http.HttpServletRequest,java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>) throws java.lang.Exception,java.lang.InterruptedException: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start field name
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start  (truncated)..."]
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (' ' (code 160)): was expecting double-quote to start field name]
2025-03-12T12:51:26.388+02:00 DEBUG 21656 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
>>>>>>> 6c3d432fccbaa6b2e6a41d08bab79ec903ec4d12
