2025-03-13T10:37:28.019+02:00  INFO 4904 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 4904 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-13T10:37:28.048+02:00 DEBUG 4904 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-13T10:37:28.101+02:00  INFO 4904 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-13T10:37:37.947+02:00  INFO 4904 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-13T10:37:37.983+02:00  INFO 4904 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-13T10:37:37.989+02:00  INFO 4904 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-13T10:37:38.200+02:00  INFO 4904 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-13T10:37:38.200+02:00  INFO 4904 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 9888 ms
2025-03-13T10:37:40.747+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:40.749+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:40.877+02:00 DEBUG 4904 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-13T10:37:40.878+02:00 DEBUG 4904 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-13T10:37:40.922+02:00  INFO 4904 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-13T10:37:41.079+02:00  INFO 4904 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-13T10:37:41.080+02:00  WARN 4904 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-13T10:37:42.276+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.279+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.281+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.286+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.292+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.295+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.298+02:00 DEBUG 4904 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T10:37:42.315+02:00 DEBUG 4904 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-13T10:37:42.752+02:00 DEBUG 4904 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-13T10:37:43.374+02:00  INFO 4904 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-13T10:37:43.711+02:00 DEBUG 4904 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-13T10:37:44.024+02:00 DEBUG 4904 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-13T10:37:44.153+02:00 DEBUG 4904 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-13T10:37:45.255+02:00  INFO 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-13T10:37:45.257+02:00  INFO 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-13T10:37:45.258+02:00 DEBUG 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-13T10:37:45.260+02:00 DEBUG 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-13T10:37:45.264+02:00 DEBUG 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-13T10:37:45.270+02:00 DEBUG 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3986b9e9
2025-03-13T10:37:45.273+02:00 DEBUG 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@48a38a12
2025-03-13T10:37:45.277+02:00 DEBUG 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-13T10:37:45.279+02:00  INFO 4904 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 21 ms
2025-03-13T10:37:45.323+02:00  INFO 4904 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-13T10:37:45.340+02:00  INFO 4904 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 18.627 seconds (process running for 20.399)
2025-03-13T10:41:28.210+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-13T10:41:28.255+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T10:41:28.269+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-13T10:41:28.276+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-13T10:41:28.280+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-13T10:41:28.431+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@5d061486]
2025-03-13T10:41:29.344+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-13T10:41:29.346+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T10:41:29.347+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-13T10:41:29.348+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-13T10:41:29.348+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-13T10:41:29.349+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@4c179d1f]
2025-03-13T10:41:31.052+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:31.052+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:31.121+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-13T10:41:31.122+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-13T10:41:31.175+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:31.175+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:31.177+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@1d626417]
2025-03-13T10:41:31.177+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@61e410e8]
2025-03-13T10:41:31.192+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:31.192+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:31.518+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-13T10:41:31.523+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-13T10:41:31.783+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:31.787+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-13T10:41:31.788+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-13T10:41:31.790+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-13T10:41:31.797+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:32.322+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:32.322+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@3fc15ad0]
2025-03-13T10:41:32.324+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:32.331+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:32.333+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-13T10:41:32.334+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-13T10:41:32.335+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-13T10:41:32.338+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:32.551+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:32.552+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@6e5ff199]
2025-03-13T10:41:32.553+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:33.246+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:41:33.259+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:41:33.259+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:41:33.476+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:33.477+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:41:33.478+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:41:33.478+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:41:33.482+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:34.002+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:34.004+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:41:34.005+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:41:34.005+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:41:34.008+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:34.010+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:34.013+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:41:34.014+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:41:34.015+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:41:34.018+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:36.330+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:36.448+02:00  WARN 4904 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:36.975+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:36.986+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.067+02:00  WARN 4904 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.188+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.723+02:00  WARN 4904 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.726+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.804+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.918+02:00  WARN 4904 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:37.920+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:37.921+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@160f5cfc, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:41:37.936+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:38.228+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:41:38.465+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:38.467+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:38.469+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@72f7bc80, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:41:38.472+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:38.532+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:41:38.656+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:41:38.658+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:38.659+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:38.660+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@5c5072c2, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:41:38.661+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:41:38.662+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:41:38.662+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:38.663+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:38.689+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:38.690+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:41:38.986+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:38.987+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:41:38.988+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:41:38.989+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:38.991+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:39.430+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:39.432+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:41:39.432+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:41:39.433+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:39.437+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:39.736+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:39.737+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:39.739+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:40.066+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:41:40.099+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:40.100+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:40.101+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:40.122+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:41:40.264+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:40.266+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:41:40.267+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:41:40.269+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:40.273+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:40.859+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:40.860+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:40.861+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:40.864+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:40.866+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:41:40.867+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:41:40.868+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:40.870+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:40.982+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:41:41.617+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:41.618+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:41.620+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:41.681+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:41.683+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:41:41.683+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:41:41.684+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:41.688+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:41.728+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:41.729+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:41.730+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:41.912+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:41:41.913+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:41:42.437+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:42.437+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:42.438+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:42.519+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:41:42.621+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:42.624+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:41:42.625+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:41:42.626+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:42.630+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:42.658+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:42.659+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:41:42.659+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:41:42.660+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:42.662+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:42.715+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:42.716+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:41:42.717+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:41:42.717+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:42.720+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:43.464+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:43.465+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:43.467+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:43.746+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:41:44.007+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:44.008+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:44.009+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:44.053+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:41:44.115+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:44.116+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:44.116+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:44.159+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:44.161+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:41:44.162+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:41:44.162+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:44.165+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:44.178+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:41:44.508+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:44.511+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:41:44.517+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:41:44.519+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:44.526+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:44.904+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:44.906+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:41:44.907+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:41:44.907+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:44.910+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:45.265+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:45.266+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:45.267+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:45.598+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:41:45.646+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:45.647+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:45.648+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:45.714+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:41:45.769+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:45.770+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:45.771+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:45.810+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:41:46.305+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:46.307+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:41:46.309+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:41:46.310+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:46.313+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:46.389+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:46.390+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:41:46.402+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:41:46.403+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:46.405+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:46.460+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:46.461+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:41:46.462+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:41:46.463+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:46.466+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:47.207+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:47.207+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:47.208+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:47.287+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:47.287+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:47.289+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:47.439+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:41:47.440+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:41:47.786+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:47.787+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:47.790+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:47.965+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:47.967+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:41:47.968+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:41:47.969+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:47.972+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:48.049+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:41:48.175+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:48.177+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:41:48.178+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:41:48.180+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:48.185+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:48.711+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:41:48.712+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:41:48.713+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:41:48.714+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:41:48.716+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:41:48.788+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:48.789+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:48.790+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:49.107+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:49.108+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:49.109+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:41:49.665+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:41:49.666+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:41:49.670+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:20.720+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-13T10:47:20.741+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T10:47:20.744+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-13T10:47:20.745+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-13T10:47:20.746+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-13T10:47:20.759+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@4e8bb4f7]
2025-03-13T10:47:21.879+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:21.945+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-13T10:47:21.955+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:21.956+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@57903ab0]
2025-03-13T10:47:21.958+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:22.335+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-13T10:47:22.565+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:22.568+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-13T10:47:22.569+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-13T10:47:22.570+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-13T10:47:22.574+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:23.118+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:23.119+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@12b1ee40]
2025-03-13T10:47:23.121+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:23.947+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:47:23.958+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:47:24.164+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:24.165+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:47:24.166+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:47:24.167+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:47:24.169+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:24.709+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:24.711+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:47:24.712+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:47:24.713+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:47:24.718+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:26.445+02:00  WARN 4904 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:26.990+02:00  WARN 4904 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:27.203+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:27.742+02:00  WARN 4904 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:27.769+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:27.954+02:00  WARN 4904 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:27.956+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:27.957+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@57b90f99, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:47:27.973+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:28.137+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:47:28.507+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:28.521+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:28.522+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:47:28.523+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:47:28.524+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:28.527+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:28.891+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:28.893+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:28.894+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@13afa46b, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:47:28.896+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:28.922+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:47:29.277+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:29.278+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:47:29.278+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:47:29.279+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:29.282+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:29.449+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/random?limit=6
2025-03-13T10:47:29.714+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:29.714+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:29.715+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:29.963+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:47:30.040+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:30.041+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/random?limit=6
2025-03-13T10:47:30.053+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/random?limit=6", parameters={masked}
2025-03-13T10:47:30.054+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getRandomProducts(int)
2025-03-13T10:47:30.219+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:30.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:47:30.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:47:30.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:30.223+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:30.709+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:30.720+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:30.722+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:30.748+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:47:30.881+02:00  WARN 4904 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:30.882+02:00  WARN 4904 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:30.882+02:00  WARN 4904 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:30.883+02:00  WARN 4904 --- [http-nio-8080-exec-6] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:47:30.884+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:30.884+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@1fbcc3b4, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:47:30.885+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:30.921+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:47:30.971+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:30.972+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:47:30.973+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:47:30.973+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:30.976+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:31.488+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:31.489+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:31.490+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:31.625+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:31.625+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:47:31.626+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:47:31.626+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:31.628+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:31.808+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:47:32.373+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:32.374+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:32.376+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:32.420+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:47:32.430+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:32.431+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:47:32.432+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:47:32.432+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:32.440+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:32.569+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:32.570+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:32.572+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:32.600+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:47:32.639+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:32.640+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:47:32.641+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:47:32.641+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:32.645+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:33.201+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:33.202+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:47:33.203+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:47:33.203+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:33.206+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:33.497+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:33.498+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:33.499+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:33.652+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:47:33.958+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:33.960+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:33.962+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:34.108+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:34.109+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:47:34.109+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:47:34.110+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:34.114+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:34.277+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:47:34.404+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:34.405+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:34.407+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:34.430+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:47:34.872+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:34.873+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:47:34.874+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:47:34.874+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:34.877+02:00  INFO 4904 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:35.041+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:35.052+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:47:35.052+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:47:35.053+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:35.055+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:35.180+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:35.181+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:35.181+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:35.201+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:47:35.807+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:35.809+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:47:35.810+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:47:35.810+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:35.813+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:35.948+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:35.949+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:35.950+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:36.127+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:47:36.270+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:36.272+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:36.273+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:36.297+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:47:36.561+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:36.563+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:47:36.564+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:47:36.565+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:36.570+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:36.873+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:36.874+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:47:36.875+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:47:36.876+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:36.882+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:37.066+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:37.067+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:37.068+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:37.343+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:47:37.628+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:37.628+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:37.629+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:37.878+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:37.879+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:37.880+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:37.955+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:47:37.963+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:47:38.072+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:38.074+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:47:38.075+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:47:38.076+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:38.082+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:38.168+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:38.169+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:47:38.170+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:47:38.171+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:38.175+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:38.710+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:38.712+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:47:38.713+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:47:38.714+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:38.717+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:39.463+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:39.463+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:39.467+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:39.575+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:39.576+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:39.577+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:39.582+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:39.582+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:39.583+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:39.701+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:47:39.909+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:39.910+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:47:39.910+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:47:39.911+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:47:39.914+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:40.678+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:40.679+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:47:40.680+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:47:44.366+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/userReview
2025-03-13T10:47:44.570+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:47:44.572+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/userReview
2025-03-13T10:47:44.572+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/userReview", parameters={}
2025-03-13T10:47:44.573+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getUserReviewForProduct(String, HttpServletRequest)
2025-03-13T10:47:44.591+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:47:45.366+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:47:45.367+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [0]
2025-03-13T10:47:45.370+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:16.903+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:49:17.116+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:17.117+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:49:17.118+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:49:17.118+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:49:17.121+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:19.189+02:00  WARN 4904 --- [http-nio-8080-exec-4] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:49:19.417+02:00  WARN 4904 --- [http-nio-8080-exec-4] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:49:19.950+02:00  WARN 4904 --- [http-nio-8080-exec-4] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:49:20.221+02:00  WARN 4904 --- [http-nio-8080-exec-4] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:49:20.224+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:20.224+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@4c1194b0, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T10:49:20.225+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:20.570+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:49:20.794+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:20.795+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:49:20.796+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:49:20.796+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:49:20.799+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:21.555+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:21.556+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:49:21.558+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:21.827+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:49:22.098+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:22.099+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:49:22.101+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:49:22.101+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:49:22.123+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:22.874+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:22.875+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:49:22.877+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:23.014+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:49:23.376+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:23.378+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:49:23.379+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:49:23.380+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:49:23.384+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:24.129+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:24.130+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:49:24.132+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:24.247+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:49:24.525+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:24.526+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:49:24.526+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:49:24.526+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:49:24.528+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:25.054+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:25.055+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:49:25.056+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:25.173+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:49:25.375+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:25.376+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:49:25.377+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:49:25.377+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:49:25.379+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:25.807+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:25.808+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:49:25.809+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:49:26.084+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:49:26.288+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:49:26.289+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:49:26.290+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:49:26.290+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:49:26.293+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:49:26.696+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:49:26.697+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:49:26.698+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:36.141+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T10:55:37.169+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:37.171+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T10:55:37.174+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T10:55:37.176+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T10:55:37.183+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:38.877+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:55:39.425+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:55:39.620+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:55:40.172+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T10:55:40.176+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:40.176+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@d3821ed, com.flawlessyou.backend.entity.product.Prod (truncated)...]
2025-03-13T10:55:40.182+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:40.314+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:55:40.513+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:40.515+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T10:55:40.516+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T10:55:40.517+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:55:40.521+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:41.274+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:41.274+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:55:41.276+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:41.519+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:55:41.829+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:41.829+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T10:55:41.830+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T10:55:41.831+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:55:41.833+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:42.577+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:42.578+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:55:42.580+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:42.737+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:55:42.989+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:42.990+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T10:55:42.990+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T10:55:42.991+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:55:42.993+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:43.734+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:43.735+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:55:43.737+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:43.970+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:55:44.212+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:44.213+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T10:55:44.214+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T10:55:44.214+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:55:44.216+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:44.958+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:44.959+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:55:44.961+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:45.186+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:55:45.456+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:45.457+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T10:55:45.458+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T10:55:45.458+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:55:45.461+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:46.201+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:46.201+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:55:46.202+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T10:55:46.424+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:55:46.688+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T10:55:46.690+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T10:55:46.691+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T10:55:46.692+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T10:55:46.696+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T10:55:47.466+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T10:55:47.467+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T10:55:47.468+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:05.437+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-13T11:04:05.494+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:04:05.505+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-13T11:04:05.516+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-13T11:04:05.519+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-13T11:04:05.599+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@7b6ff8af]
2025-03-13T11:04:06.342+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:06.599+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-13T11:04:06.664+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:06.668+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@7877b4db]
2025-03-13T11:04:06.681+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:07.748+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-13T11:04:08.100+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:08.107+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-13T11:04:08.109+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-13T11:04:08.112+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-13T11:04:08.131+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:08.656+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:08.660+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@7d34d6dc]
2025-03-13T11:04:08.665+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:09.893+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T11:04:09.895+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-13T11:04:10.135+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:10.138+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T11:04:10.139+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T11:04:10.140+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T11:04:10.153+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:10.242+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:10.244+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-13T11:04:10.245+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-13T11:04:10.246+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-13T11:04:10.252+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:12.002+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:12.182+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:12.324+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:12.387+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:12.693+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:12.925+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:13.000+02:00  WARN 4904 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:13.002+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:13.003+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@569167a2, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T11:04:13.006+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:13.120+02:00  WARN 4904 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:13.122+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:13.123+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@24eedd2f, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T11:04:13.128+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:13.297+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T11:04:13.301+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T11:04:13.647+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:13.650+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T11:04:13.650+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T11:04:13.651+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:13.664+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:13.737+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:13.740+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T11:04:13.740+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T11:04:13.742+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:13.750+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:14.495+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:14.496+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:14.499+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:14.590+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:14.591+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:14.593+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:14.828+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T11:04:14.829+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T11:04:15.105+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:15.107+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T11:04:15.108+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T11:04:15.109+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:15.117+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:15.148+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:15.151+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T11:04:15.152+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T11:04:15.153+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:15.161+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:16.026+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:16.027+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:16.030+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:16.033+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:16.034+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:16.036+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:16.334+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/random?limit=6
2025-03-13T11:04:16.339+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T11:04:16.340+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T11:04:16.652+02:00  INFO 4904 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:16.660+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/random?limit=6
2025-03-13T11:04:16.699+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:16.700+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:16.708+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T11:04:16.714+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T11:04:16.716+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T11:04:16.716+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/random?limit=6", parameters={masked}
2025-03-13T11:04:16.718+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getRandomProducts(int)
2025-03-13T11:04:16.716+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T11:04:16.717+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:16.721+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:16.734+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:16.737+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:17.210+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:17.211+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:17.214+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:17.215+02:00  WARN 4904 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:04:17.216+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:17.217+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@760da2c6, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T11:04:17.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:17.279+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T11:04:17.475+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:17.476+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:17.477+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:17.500+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T11:04:17.512+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:17.514+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-13T11:04:17.515+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-13T11:04:17.517+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:17.524+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:17.874+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:17.876+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:17.880+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T11:04:17.887+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:17.890+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T11:04:17.902+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:17.903+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:17.920+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:18.207+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T11:04:18.515+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:18.518+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:18.525+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:18.549+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:18.556+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:18.567+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:18.679+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:18.687+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T11:04:18.691+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T11:04:18.718+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:18.825+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T11:04:18.825+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:18.825+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T11:04:19.191+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:19.195+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-13T11:04:19.196+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-13T11:04:19.198+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:19.216+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:19.345+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:19.348+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T11:04:19.349+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T11:04:19.350+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:19.359+02:00  INFO 4904 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:19.576+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:19.577+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:19.580+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:19.736+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T11:04:19.962+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:19.963+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:19.965+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:19.994+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T11:04:20.053+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:20.057+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T11:04:20.064+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T11:04:20.071+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:20.089+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:20.122+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:20.131+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:20.138+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:20.163+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T11:04:20.636+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:20.654+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-13T11:04:20.688+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:20.705+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-13T11:04:20.856+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:20.849+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T11:04:20.874+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T11:04:20.884+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:20.898+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:20.903+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:20.960+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:20.968+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:20.977+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:21.282+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T11:04:21.321+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:21.324+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:21.333+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:21.355+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:21.360+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:21.366+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:21.399+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T11:04:21.492+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:21.494+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T11:04:21.496+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T11:04:21.497+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:21.521+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:21.620+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:21.623+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-13T11:04:21.624+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-13T11:04:21.625+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:21.634+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:21.936+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:21.937+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:21.939+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:22.160+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:22.164+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:22.168+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:22.296+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T11:04:22.782+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:22.785+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-13T11:04:22.786+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-13T11:04:22.789+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:22.800+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:23.400+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:23.401+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:23.404+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:23.733+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T11:04:23.937+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:23.939+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-13T11:04:23.940+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-13T11:04:23.941+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-13T11:04:23.946+02:00  INFO 4904 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:24.628+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:04:24.629+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-13T11:04:24.630+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:04:31.231+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T11:04:31.433+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:04:31.439+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T11:04:31.440+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=DRY", parameters={masked}
2025-03-13T11:04:31.442+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T11:04:31.647+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T11:04:31.668+02:00  INFO 4904 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:04:32.353+02:00 ERROR 4904 --- [http-nio-8080-exec-2] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:04:32.355+02:00 ERROR 4904 --- [http-nio-8080-exec-2] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:04:32.388+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T11:04:32.398+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T11:04:32.404+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T11:04:32.414+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T11:04:32.415+02:00 DEBUG 4904 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T11:05:04.898+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T11:05:05.177+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:05:05.180+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T11:05:05.181+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=DRY", parameters={masked}
2025-03-13T11:05:05.182+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T11:05:05.194+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T11:05:05.203+02:00  INFO 4904 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:05:06.101+02:00 ERROR 4904 --- [http-nio-8080-exec-6] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:05:06.102+02:00 ERROR 4904 --- [http-nio-8080-exec-6] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:05:06.119+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T11:05:06.121+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T11:05:06.121+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T11:05:06.125+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T11:05:06.127+02:00 DEBUG 4904 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T11:05:44.277+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.html
2025-03-13T11:05:44.281+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:44.283+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.html
2025-03-13T11:05:44.284+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.html", parameters={}
2025-03-13T11:05:44.290+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-13T11:05:44.493+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:44.531+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui.css
2025-03-13T11:05:44.533+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:44.534+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.css
2025-03-13T11:05:44.534+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-bundle.js
2025-03-13T11:05:44.536+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui.css
2025-03-13T11:05:44.539+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:44.537+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:44.539+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui.css", parameters={}
2025-03-13T11:05:44.542+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.css
2025-03-13T11:05:44.542+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-bundle.js
2025-03-13T11:05:44.543+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.css", parameters={}
2025-03-13T11:05:44.543+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-03-13T11:05:44.544+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-13T11:05:44.546+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-13T11:05:44.545+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-13T11:05:44.558+02:00 DEBUG 4904 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:44.563+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:44.650+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:44.663+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-13T11:05:44.665+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-initializer.js
2025-03-13T11:05:44.667+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:44.667+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:44.671+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-initializer.js
2025-03-13T11:05:44.672+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-13T11:05:44.676+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-03-13T11:05:44.676+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-03-13T11:05:44.678+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-13T11:05:44.678+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-13T11:05:44.702+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:44.804+02:00 DEBUG 4904 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:45.319+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs/swagger-config
2025-03-13T11:05:45.321+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:45.323+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs/swagger-config
2025-03-13T11:05:45.325+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs/swagger-config", parameters={}
2025-03-13T11:05:45.329+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-03-13T11:05:45.353+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json]
2025-03-13T11:05:45.366+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-re (truncated)...]
2025-03-13T11:05:45.376+02:00 DEBUG 4904 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:05:45.427+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs
2025-03-13T11:05:45.429+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:05:45.430+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs
2025-03-13T11:05:45.430+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs", parameters={}
2025-03-13T11:05:45.431+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-03-13T11:05:45.459+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T11:05:45.996+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:45.997+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.056+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:46.057+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.128+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:46.129+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.138+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.Integer>
2025-03-13T11:05:46.139+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.150+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:46.151+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.152+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:46.295+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:46.295+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.297+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:46.298+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.298+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:46.322+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:05:46.323+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.326+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.331+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:46.333+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.334+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:46.356+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-13T11:05:46.357+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.358+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-13T11:05:46.359+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:46.360+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.360+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:46.412+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:46.413+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.415+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:46.423+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-13T11:05:46.424+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.425+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-13T11:05:46.427+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:46.427+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.428+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:46.460+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-13T11:05:46.460+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.461+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-13T11:05:46.462+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-13T11:05:46.463+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.463+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-13T11:05:46.470+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.488+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.567+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:46.570+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.571+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:46.572+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.575+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:46.578+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:46.579+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.583+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Role
2025-03-13T11:05:46.584+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.598+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:46.598+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.601+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:46.601+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.603+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:46.608+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.User
2025-03-13T11:05:46.609+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.611+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.614+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:46.615+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.615+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:46.626+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-13T11:05:46.626+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.627+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-13T11:05:46.635+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Role]
2025-03-13T11:05:46.636+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.638+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Role], com.flawlessyou.backend.entity.user.Role
2025-03-13T11:05:46.645+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.time.LocalDate]
2025-03-13T11:05:46.645+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.646+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.time.LocalDate], java.time.LocalDate
2025-03-13T11:05:46.666+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:46.667+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.668+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:46.680+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.698+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.736+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:46.737+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.739+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:46.742+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.743+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:46.768+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:46.769+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.771+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:46.772+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.777+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.780+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:46.781+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.781+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:46.785+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:46.786+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.787+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:46.792+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:46.793+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.793+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:46.796+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:46.796+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.797+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:46.801+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.811+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.840+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:46.842+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.846+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-13T11:05:46.849+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.852+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:46.853+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.855+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:46.878+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:46.879+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.880+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:46.882+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.884+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:46.904+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-13T11:05:46.905+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.909+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:46.912+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:46.913+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.914+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:46.921+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-13T11:05:46.922+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.925+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-13T11:05:46.927+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:46.927+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.928+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:46.935+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:46.938+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.940+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:46.948+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-13T11:05:46.952+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.955+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-13T11:05:46.958+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:46.963+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.966+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:46.975+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-13T11:05:46.976+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.979+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-13T11:05:46.981+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-13T11:05:46.987+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:46.988+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-13T11:05:46.994+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.010+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.098+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:47.104+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.105+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:47.105+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.106+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:47.110+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.111+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.129+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:47.130+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.131+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:47.131+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.137+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:47.142+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.143+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.146+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-13T11:05:47.147+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.176+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:47.177+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.178+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:47.179+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.179+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:47.188+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.190+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.193+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<org.springframework.web.multipart.MultipartFile>
2025-03-13T11:05:47.194+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.196+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class org.springframework.web.multipart.MultipartFile]
2025-03-13T11:05:47.196+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.217+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:47.218+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:47.224+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.224+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:47.229+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.230+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.240+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.241+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.258+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.258+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.262+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.262+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.267+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.271+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.292+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.293+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.299+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-13T11:05:47.301+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.312+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:47.313+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.314+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:47.314+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.315+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:47.324+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:47.327+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.329+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.332+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.336+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.338+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.341+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:47.342+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.342+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:47.348+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:47.351+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.353+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:47.357+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:47.357+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.358+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:47.361+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.368+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.387+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.388+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.392+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.393+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.394+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.395+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.411+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.412+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.418+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:47.418+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.422+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-13T11:05:47.423+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.430+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-13T11:05:47.431+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.432+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.434+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.435+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.441+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:47.442+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.458+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-13T11:05:47.469+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.472+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-13T11:05:47.473+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.474+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:47.475+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.477+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.477+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.478+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.480+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:47.480+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.480+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:47.486+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:47.488+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.489+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:47.491+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:47.492+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.493+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:47.495+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.506+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.517+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:47.523+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.527+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>
2025-03-13T11:05:47.527+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.529+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-13T11:05:47.529+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.530+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-13T11:05:47.546+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis
2025-03-13T11:05:47.546+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.551+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.556+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.557+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.557+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.560+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:47.560+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.561+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:47.563+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]]
2025-03-13T11:05:47.563+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.564+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]], java.util.Map
2025-03-13T11:05:47.567+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-13T11:05:47.569+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.571+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-13T11:05:47.577+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]]
2025-03-13T11:05:47.578+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.579+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]], java.util.List
2025-03-13T11:05:47.579+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-13T11:05:47.580+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.580+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:47.582+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.591+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:47.592+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.592+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:47.594+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:47.594+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.595+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:47.597+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.608+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.674+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.734+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.750+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-13T11:05:47.750+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.753+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.756+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.757+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.758+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.761+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:47.762+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.791+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:47.818+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.829+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.860+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<com.flawlessyou.backend.entity.routine.Routine>
2025-03-13T11:05:47.862+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.863+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.Routine]
2025-03-13T11:05:47.865+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.867+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.Routine], com.flawlessyou.backend.entity.routine.Routine
2025-03-13T11:05:47.869+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.871+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.872+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.873+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.879+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:47.880+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.881+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:47.893+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.908+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.926+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-13T11:05:47.927+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.929+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.930+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.930+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.944+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:47.945+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.945+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:47.946+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.946+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:47.950+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.SignupRequest
2025-03-13T11:05:47.951+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.964+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.967+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.968+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.969+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.976+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.977+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.977+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.980+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:47.980+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:47.981+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:47.983+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:47.990+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.007+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.008+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.009+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.010+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.010+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.013+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.LoginRequest
2025-03-13T11:05:48.013+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.014+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.018+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:48.019+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.020+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:48.025+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.029+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.047+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.047+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.051+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.052+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.053+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.057+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-13T11:05:48.058+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.060+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:48.061+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.062+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:48.077+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.078+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.079+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.079+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.080+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.098+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.100+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.104+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.105+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.118+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.120+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.121+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.122+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.123+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.128+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.129+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.146+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.148+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.153+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.158+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.163+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.176+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.177+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.202+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.203+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.205+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.206+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.207+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.211+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.211+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.227+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-13T11:05:48.228+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.229+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-13T11:05:48.230+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.230+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-13T11:05:48.234+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.237+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:48.238+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.240+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:48.244+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-13T11:05:48.245+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.245+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-13T11:05:48.246+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:48.246+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.247+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:48.298+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:48.301+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.302+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:48.307+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-13T11:05:48.307+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.308+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-13T11:05:48.309+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:48.309+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.310+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:48.312+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-13T11:05:48.322+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.325+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-13T11:05:48.327+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-13T11:05:48.328+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.329+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-13T11:05:48.334+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.350+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.374+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-13T11:05:48.375+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.395+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.397+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.402+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.409+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.413+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.449+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.454+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.456+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.458+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.459+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.462+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.462+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.491+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.card.Card
2025-03-13T11:05:48.492+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.494+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.497+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:48.499+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.504+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:48.511+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-13T11:05:48.512+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.513+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-13T11:05:48.542+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:48.543+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.544+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:48.554+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-13T11:05:48.557+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.558+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-13T11:05:48.571+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.590+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.654+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-13T11:05:48.657+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.661+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-13T11:05:48.662+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.663+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-13T11:05:48.666+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.671+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:48.672+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.674+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:48.679+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-13T11:05:48.680+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.680+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-13T11:05:48.685+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:48.691+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.693+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:48.699+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-13T11:05:48.700+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.702+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-13T11:05:48.707+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.745+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.790+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-13T11:05:48.791+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.792+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-13T11:05:48.793+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.794+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-13T11:05:48.797+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.802+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:48.803+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.804+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:48.809+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-13T11:05:48.810+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.813+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-13T11:05:48.825+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:48.826+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.827+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:48.838+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-13T11:05:48.839+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.840+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-13T11:05:48.868+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.891+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:48.918+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:48.919+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.944+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.944+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.945+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.946+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.946+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.963+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.964+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.970+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:48.971+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.972+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:48.994+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:48.995+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:48.998+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:49.000+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.005+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:49.018+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.lang.String>
2025-03-13T11:05:49.021+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.022+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.023+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.024+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.026+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:49.027+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.055+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.util.Map<java.lang.String, java.lang.String>>
2025-03-13T11:05:49.056+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.058+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]]
2025-03-13T11:05:49.058+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.059+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]], java.util.Map
2025-03-13T11:05:49.060+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.063+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.063+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.084+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-13T11:05:49.086+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.089+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-13T11:05:49.090+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.091+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:49.092+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.096+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.102+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.104+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.107+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:49.109+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.110+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:49.113+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:49.118+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.120+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:49.124+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.124+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.127+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.129+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.141+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.173+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:49.177+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.199+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:49.205+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.209+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.222+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.226+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.228+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:49.228+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.230+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:49.243+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:49.244+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.247+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:49.257+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.258+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.258+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.261+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.273+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.293+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:49.294+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.310+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-13T11:05:49.311+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.312+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-13T11:05:49.312+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.313+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-13T11:05:49.316+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.321+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.321+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.322+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.324+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-13T11:05:49.325+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.326+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-13T11:05:49.326+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:49.327+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.327+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:49.334+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.336+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.337+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.342+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-13T11:05:49.343+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.343+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-13T11:05:49.344+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:49.344+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.345+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:49.347+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-13T11:05:49.351+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.353+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-13T11:05:49.354+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-13T11:05:49.354+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.355+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-13T11:05:49.357+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.375+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.394+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:49.395+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.502+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-13T11:05:49.530+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.544+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-13T11:05:49.546+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.556+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-13T11:05:49.566+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.577+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.607+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.624+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.644+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:49.657+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.659+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:49.662+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-13T11:05:49.663+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.665+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-13T11:05:49.669+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.673+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.676+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.691+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.712+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.745+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:49.746+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.758+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-13T11:05:49.759+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.759+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-13T11:05:49.760+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.761+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-13T11:05:49.762+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.765+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.766+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.767+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.774+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-13T11:05:49.775+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.775+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-13T11:05:49.776+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:49.777+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.777+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:49.782+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.783+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.785+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.796+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-13T11:05:49.797+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.801+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-13T11:05:49.803+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:49.806+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.807+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:49.810+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-13T11:05:49.811+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.812+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-13T11:05:49.812+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-13T11:05:49.813+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.817+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-13T11:05:49.821+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.835+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.863+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-13T11:05:49.866+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.868+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.870+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.871+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.872+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.875+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.875+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.876+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.879+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.889+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.907+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.routine.RoutineTime, java.util.List<com.flawlessyou.backend.entity.product.Product>>
2025-03-13T11:05:49.908+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.909+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]]
2025-03-13T11:05:49.909+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.910+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]], java.util.List
2025-03-13T11:05:49.910+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-13T11:05:49.910+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.911+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-13T11:05:49.911+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.913+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-13T11:05:49.914+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.915+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-13T11:05:49.919+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-13T11:05:49.920+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.920+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-13T11:05:49.923+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-13T11:05:49.923+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.924+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-13T11:05:49.927+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-13T11:05:49.927+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.928+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-13T11:05:49.934+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-13T11:05:49.935+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.936+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-13T11:05:49.937+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-13T11:05:49.938+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.939+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-13T11:05:49.941+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-13T11:05:49.941+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.942+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-13T11:05:49.943+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-13T11:05:49.943+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.943+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-13T11:05:49.945+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.960+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-13T11:05:49.994+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:49.995+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.996+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:49.996+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:49.998+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:50.002+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.002+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.017+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:50.018+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.018+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:50.019+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.020+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:50.025+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.026+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.036+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-13T11:05:50.037+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.038+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-13T11:05:50.039+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.040+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-13T11:05:50.043+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.044+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.061+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.062+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.066+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.067+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.069+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.072+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.079+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-13T11:05:50.080+02:00 TRACE 4904 --- [http-nio-8080-exec-5] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@e638553
2025-03-13T11:05:50.118+02:00  INFO 4904 --- [http-nio-8080-exec-5] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 4648 ms
2025-03-13T11:05:50.230+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, */*] and supported [application/json]
2025-03-13T11:05:50.269+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-03-13T11:05:50.276+02:00 DEBUG 4904 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:06:17.099+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-13T11:06:17.154+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-13T11:06:17.156+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-13T11:06:17.157+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-13T11:06:17.157+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-13T11:06:17.160+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@2bde91a5]
2025-03-13T11:06:17.686+02:00  INFO 4904 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:06:17.924+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-13T11:06:17.939+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T11:06:17.940+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@1fcba663]
2025-03-13T11:06:17.944+02:00 DEBUG 4904 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T11:07:09.182+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T11:07:09.442+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:07:09.445+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T11:07:09.446+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=DRY", parameters={masked}
2025-03-13T11:07:09.448+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T11:07:09.454+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T11:07:09.465+02:00  INFO 4904 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:07:10.213+02:00 ERROR 4904 --- [http-nio-8080-exec-3] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:07:10.215+02:00 ERROR 4904 --- [http-nio-8080-exec-3] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:07:10.218+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T11:07:10.219+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T11:07:10.220+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T11:07:10.223+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T11:07:10.223+02:00 DEBUG 4904 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T11:07:21.701+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-13T11:07:21.930+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:07:21.933+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=OILY
2025-03-13T11:07:21.934+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=OILY", parameters={masked}
2025-03-13T11:07:21.935+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T11:07:21.938+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T11:07:21.946+02:00  INFO 4904 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:07:22.511+02:00 ERROR 4904 --- [http-nio-8080-exec-4] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:07:22.512+02:00 ERROR 4904 --- [http-nio-8080-exec-4] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:07:22.514+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T11:07:22.515+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T11:07:22.516+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T11:07:22.518+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T11:07:22.519+02:00 DEBUG 4904 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T11:07:29.231+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T11:07:29.565+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T11:07:29.567+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T11:07:29.569+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=NORMAL", parameters={masked}
2025-03-13T11:07:29.572+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T11:07:29.576+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T11:07:29.589+02:00  INFO 4904 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T11:07:30.181+02:00 ERROR 4904 --- [http-nio-8080-exec-1] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:07:30.182+02:00 ERROR 4904 --- [http-nio-8080-exec-1] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T11:07:30.183+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T11:07:30.185+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T11:07:30.186+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T11:07:30.188+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T11:07:30.189+02:00 DEBUG 4904 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T14:55:18.975+02:00  INFO 24016 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 24016 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-13T14:55:18.982+02:00 DEBUG 24016 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-13T14:55:18.990+02:00  INFO 24016 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-13T14:55:31.471+02:00  INFO 24016 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-13T14:55:31.558+02:00  INFO 24016 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-13T14:55:31.561+02:00  INFO 24016 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-13T14:55:31.986+02:00  INFO 24016 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-13T14:55:31.994+02:00  INFO 24016 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 12821 ms
2025-03-13T14:55:37.916+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:37.929+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:38.403+02:00 DEBUG 24016 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-13T14:55:38.403+02:00 DEBUG 24016 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-13T14:55:38.520+02:00  INFO 24016 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-13T14:55:38.869+02:00  INFO 24016 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-13T14:55:38.873+02:00  WARN 24016 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-13T14:55:41.464+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.467+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.470+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.478+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.481+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.500+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.510+02:00 DEBUG 24016 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T14:55:41.533+02:00 DEBUG 24016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-13T14:55:42.469+02:00 DEBUG 24016 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-13T14:55:44.652+02:00  INFO 24016 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-13T14:55:46.087+02:00 DEBUG 24016 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-13T14:55:46.628+02:00 DEBUG 24016 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-13T14:55:47.023+02:00 DEBUG 24016 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-13T14:55:50.349+02:00  INFO 24016 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-13T14:55:50.459+02:00  INFO 24016 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 33.162 seconds (process running for 37.727)
2025-03-13T14:55:50.907+02:00  INFO 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-13T14:55:50.911+02:00  INFO 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-13T14:55:50.911+02:00 DEBUG 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-13T14:55:50.913+02:00 DEBUG 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-13T14:55:50.915+02:00 DEBUG 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-13T14:55:50.926+02:00 DEBUG 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2cfd9b0a
2025-03-13T14:55:50.929+02:00 DEBUG 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@4dd425dc
2025-03-13T14:55:50.929+02:00 DEBUG 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-13T14:55:50.936+02:00  INFO 24016 --- [RMI TCP Connection(3)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 25 ms
2025-03-13T14:56:22.830+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T14:56:27.323+02:00  INFO 24016 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T14:56:27.353+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=DRY
2025-03-13T14:56:27.375+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=DRY", parameters={masked}
2025-03-13T14:56:27.387+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T14:56:27.573+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T14:56:27.605+02:00  INFO 24016 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T14:56:28.397+02:00 ERROR 24016 --- [http-nio-8080-exec-1] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T14:56:28.400+02:00 ERROR 24016 --- [http-nio-8080-exec-1] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T14:56:28.406+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T14:56:28.438+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T14:56:28.442+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T14:56:28.471+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T14:56:28.474+02:00 DEBUG 24016 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T15:23:11.718+02:00  INFO 24016 --- [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-03-13T15:23:11.800+02:00  INFO 24016 --- [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-03-13T15:24:02.292+02:00  INFO 6068 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 6068 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-13T15:24:02.304+02:00 DEBUG 6068 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-13T15:24:02.316+02:00  INFO 6068 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-13T15:24:10.997+02:00  INFO 6068 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-13T15:24:11.537+02:00  INFO 6068 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-13T15:24:11.552+02:00  INFO 6068 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-13T15:24:12.252+02:00  INFO 6068 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-13T15:24:12.259+02:00  INFO 6068 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 9585 ms
2025-03-13T15:24:16.477+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:16.479+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:16.760+02:00 DEBUG 6068 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-13T15:24:16.764+02:00 DEBUG 6068 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-13T15:24:16.860+02:00  INFO 6068 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-13T15:24:17.140+02:00  INFO 6068 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-13T15:24:17.143+02:00  WARN 6068 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-13T15:24:18.966+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.971+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.973+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.975+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.980+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.985+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.989+02:00 DEBUG 6068 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:24:18.997+02:00 DEBUG 6068 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-13T15:24:19.481+02:00 DEBUG 6068 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-13T15:24:20.206+02:00  INFO 6068 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-13T15:24:21.156+02:00 DEBUG 6068 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-13T15:24:21.693+02:00 DEBUG 6068 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-13T15:24:21.905+02:00 DEBUG 6068 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-13T15:24:23.558+02:00  INFO 6068 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-13T15:24:23.604+02:00  INFO 6068 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 23.361 seconds (process running for 25.599)
2025-03-13T15:24:25.242+02:00  INFO 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-13T15:24:25.244+02:00  INFO 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-13T15:24:25.245+02:00 DEBUG 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-13T15:24:25.248+02:00 DEBUG 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-13T15:24:25.250+02:00 DEBUG 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-13T15:24:25.254+02:00 DEBUG 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1c571162
2025-03-13T15:24:25.256+02:00 DEBUG 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@255d4d7
2025-03-13T15:24:25.257+02:00 DEBUG 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-13T15:24:25.258+02:00  INFO 6068 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2025-03-13T15:24:30.982+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-13T15:24:34.592+02:00  INFO 6068 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:24:34.634+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-13T15:24:34.651+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-13T15:24:34.663+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-13T15:24:34.872+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@64ee7bd2]
2025-03-13T15:24:35.281+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:24:35.289+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-13T13:24:34.892934000Z"]
2025-03-13T15:24:35.309+02:00 DEBUG 6068 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T15:25:17.811+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-13T15:25:18.184+02:00  INFO 6068 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:25:18.201+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-13T15:25:18.201+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-13T15:25:18.201+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-13T15:25:18.220+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@27cbfcf1]
2025-03-13T15:25:18.709+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:25:18.711+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-13T13:25:18.372650000Z"]
2025-03-13T15:25:18.716+02:00 DEBUG 6068 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T15:25:58.347+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T15:25:59.010+02:00  INFO 6068 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:25:59.023+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T15:25:59.025+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=NORMAL", parameters={masked}
2025-03-13T15:25:59.025+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T15:25:59.063+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T15:25:59.089+02:00  INFO 6068 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T15:25:59.889+02:00 ERROR 6068 --- [http-nio-8080-exec-5] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T15:25:59.900+02:00 ERROR 6068 --- [http-nio-8080-exec-5] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T15:25:59.935+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T15:25:59.943+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:25:59.943+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T15:25:59.954+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T15:25:59.955+02:00 DEBUG 6068 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T15:26:02.977+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T15:26:03.350+02:00  INFO 6068 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:26:03.357+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T15:26:03.359+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=NORMAL", parameters={masked}
2025-03-13T15:26:03.359+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T15:26:03.366+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T15:26:03.377+02:00  INFO 6068 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T15:26:04.233+02:00 ERROR 6068 --- [http-nio-8080-exec-6] c.f.b.e.S.SkinAnalysisService            : Error saving SkinAnalysis: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T15:26:04.233+02:00 ERROR 6068 --- [http-nio-8080-exec-6] c.f.b.e.S.SkinAnalysisService            : Error in getRecommendedTreatments: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')
2025-03-13T15:26:04.233+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T15:26:04.241+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:26:04.241+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not serialize object. Maps with non-string keys are not supported (found in field 'prob (truncated)..."]
2025-03-13T15:26:04.241+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Could not serialize object. Maps with non-string keys are not supported (found in field 'problems')]
2025-03-13T15:26:04.241+02:00 DEBUG 6068 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T15:42:10.852+02:00  INFO 6424 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 6424 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-13T15:42:10.862+02:00 DEBUG 6424 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-13T15:42:10.864+02:00  INFO 6424 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-13T15:42:18.234+02:00  INFO 6424 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-13T15:42:18.305+02:00  INFO 6424 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-13T15:42:18.307+02:00  INFO 6424 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-13T15:42:18.600+02:00  INFO 6424 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-13T15:42:18.602+02:00  INFO 6424 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 7514 ms
2025-03-13T15:42:21.438+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:21.440+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:21.625+02:00 DEBUG 6424 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-13T15:42:21.626+02:00 DEBUG 6424 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-13T15:42:21.678+02:00  INFO 6424 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-13T15:42:21.912+02:00  INFO 6424 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-13T15:42:21.915+02:00  WARN 6424 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-13T15:42:23.874+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.878+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.881+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.884+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.891+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.895+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.902+02:00 DEBUG 6424 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:42:23.913+02:00 DEBUG 6424 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-13T15:42:24.456+02:00 DEBUG 6424 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-13T15:42:25.091+02:00  INFO 6424 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-13T15:42:25.605+02:00 DEBUG 6424 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-13T15:42:26.016+02:00 DEBUG 6424 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-13T15:42:26.205+02:00 DEBUG 6424 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-13T15:42:27.957+02:00  INFO 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-13T15:42:27.961+02:00  INFO 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-13T15:42:27.963+02:00 DEBUG 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-13T15:42:27.965+02:00 DEBUG 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-13T15:42:27.971+02:00 DEBUG 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-13T15:42:27.985+02:00 DEBUG 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f348e10
2025-03-13T15:42:27.989+02:00 DEBUG 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@24ac87a
2025-03-13T15:42:27.990+02:00 DEBUG 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-13T15:42:27.995+02:00  INFO 6424 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 31 ms
2025-03-13T15:42:28.102+02:00  INFO 6424 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-13T15:42:28.118+02:00  INFO 6424 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 18.69 seconds (process running for 20.937)
2025-03-13T15:44:14.573+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/treatments
2025-03-13T15:44:20.507+02:00  INFO 6424 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:44:20.537+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/treatments
2025-03-13T15:44:20.554+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/treatments", parameters={}
2025-03-13T15:44:20.563+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.TreatmentController#createTreatment(Treatment)
2025-03-13T15:44:20.720+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.entity.treatments.Treatment@79b9ffef]
2025-03-13T15:44:21.377+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:44:21.382+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Writing ["2025-03-13T13:44:20.821470000Z"]
2025-03-13T15:44:21.387+02:00 DEBUG 6424 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T15:44:33.028+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T15:44:33.394+02:00  INFO 6424 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:44:33.397+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/skin-analysis/recommend-treatments?skinType=NORMAL
2025-03-13T15:44:33.405+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/skin-analysis/recommend-treatments?skinType=NORMAL", parameters={masked}
2025-03-13T15:44:33.405+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#recommendTreatments(Type, HttpServletRequest, Map)
2025-03-13T15:44:33.431+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{WRINKLES=0.0, PIGMENTATION=0.0, ACNE=100.0, NORMAL=0.0}]
2025-03-13T15:44:33.450+02:00  INFO 6424 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-13T15:44:34.936+02:00  INFO 6424 --- [http-nio-8080-exec-3] c.f.b.e.S.SkinAnalysisService            : SkinAnalysis saved with ID: 196583c0-a373-43ee-9bf7-c52712db03a7
2025-03-13T15:44:34.955+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T15:44:34.959+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis@13a65261]
2025-03-13T15:44:35.019+02:00 DEBUG 6424 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T15:45:03.764+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/skin-analysis/i7tzJSYWQByvR9DnSWyJ/products
2025-03-13T15:45:04.112+02:00  INFO 6424 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:45:04.118+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/skin-analysis/i7tzJSYWQByvR9DnSWyJ/products
2025-03-13T15:45:04.122+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/api/skin-analysis/i7tzJSYWQByvR9DnSWyJ/products", parameters={}
2025-03-13T15:45:04.128+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#getProductsBySkinAnalysisId(String)
2025-03-13T15:45:04.641+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T15:45:04.641+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:45:04.648+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: SkinAnalysis not found with id: i7tzJSYWQByvR9DnSWyJ"]
2025-03-13T15:45:04.654+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: SkinAnalysis not found with id: i7tzJSYWQByvR9DnSWyJ]
2025-03-13T15:45:04.662+02:00 DEBUG 6424 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T15:45:55.621+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/skin-analysis/b976da84-ae67-48ef-82a5-8811992f7e54/products
2025-03-13T15:45:56.543+02:00  INFO 6424 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:45:56.550+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/skin-analysis/b976da84-ae67-48ef-82a5-8811992f7e54/products
2025-03-13T15:45:56.550+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/api/skin-analysis/b976da84-ae67-48ef-82a5-8811992f7e54/products", parameters={}
2025-03-13T15:45:56.553+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#getProductsBySkinAnalysisId(String)
2025-03-13T15:45:56.842+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-13T15:45:56.842+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-13T15:45:56.842+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: Could not deserialize object. Class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis  (truncated)..."]
2025-03-13T15:45:56.850+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: Could not deserialize object. Class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis does not define a no-argument constructor. If you are using ProGuard, make sure these constructors are not stripped]
2025-03-13T15:45:56.852+02:00 DEBUG 6424 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-13T15:46:41.585+02:00  INFO 4076 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 4076 (C:\Users\user\Desktop\BackEnd-Flawless-You\target\classes started by user in C:\Users\user\Desktop\BackEnd-Flawless-You)
2025-03-13T15:46:41.590+02:00 DEBUG 4076 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-13T15:46:41.593+02:00  INFO 4076 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-13T15:46:49.438+02:00  INFO 4076 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-13T15:46:49.531+02:00  INFO 4076 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-13T15:46:49.533+02:00  INFO 4076 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-13T15:46:49.766+02:00  INFO 4076 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-13T15:46:49.769+02:00  INFO 4076 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 8038 ms
2025-03-13T15:46:53.135+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:53.138+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:53.362+02:00 DEBUG 4076 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-13T15:46:53.364+02:00 DEBUG 4076 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-13T15:46:53.416+02:00  INFO 4076 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-13T15:46:53.616+02:00  INFO 4076 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-13T15:46:53.619+02:00  WARN 4076 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-13T15:46:55.314+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.318+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.320+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.324+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.332+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.335+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.339+02:00 DEBUG 4076 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-13T15:46:55.349+02:00 DEBUG 4076 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 56 mappings in 'requestMappingHandlerMapping'
2025-03-13T15:46:55.876+02:00 DEBUG 4076 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-13T15:46:56.643+02:00  INFO 4076 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-13T15:46:57.265+02:00 DEBUG 4076 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-13T15:46:57.693+02:00 DEBUG 4076 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-13T15:46:57.941+02:00 DEBUG 4076 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-13T15:46:59.996+02:00  INFO 4076 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-13T15:47:00.063+02:00  INFO 4076 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 19.921 seconds (process running for 21.807)
2025-03-13T15:47:02.182+02:00  INFO 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-13T15:47:02.185+02:00  INFO 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-13T15:47:02.187+02:00 DEBUG 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-13T15:47:02.188+02:00 DEBUG 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-13T15:47:02.189+02:00 DEBUG 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-13T15:47:02.192+02:00 DEBUG 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f348e10
2025-03-13T15:47:02.194+02:00 DEBUG 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@24ac87a
2025-03-13T15:47:02.195+02:00 DEBUG 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-13T15:47:02.197+02:00  INFO 4076 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-03-13T15:47:08.606+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/skin-analysis/b976da84-ae67-48ef-82a5-8811992f7e54/products
2025-03-13T15:47:12.293+02:00  INFO 4076 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:47:12.334+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/skin-analysis/b976da84-ae67-48ef-82a5-8811992f7e54/products
2025-03-13T15:47:12.343+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/skin-analysis/b976da84-ae67-48ef-82a5-8811992f7e54/products", parameters={}
2025-03-13T15:47:12.357+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#getProductsBySkinAnalysisId(String)
2025-03-13T15:47:13.286+02:00  WARN 4076 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T15:47:14.179+02:00  WARN 4076 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T15:47:14.218+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T15:47:14.223+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Writing [[com.flawlessyou.backend.entity.product.Product@6f4ac422, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T15:47:14.272+02:00 DEBUG 4076 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-13T15:49:07.291+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/skin-analysis/ce6f6718-8709-469c-b3b2-69a9ee96e043/products
2025-03-13T15:49:07.643+02:00  INFO 4076 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-13T15:49:07.650+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/skin-analysis/ce6f6718-8709-469c-b3b2-69a9ee96e043/products
2025-03-13T15:49:07.651+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/api/skin-analysis/ce6f6718-8709-469c-b3b2-69a9ee96e043/products", parameters={}
2025-03-13T15:49:07.660+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.SkinAnalysisController#getProductsBySkinAnalysisId(String)
2025-03-13T15:49:08.594+02:00  WARN 4076 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T15:49:09.363+02:00  WARN 4076 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-13T15:49:09.366+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-13T15:49:09.366+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Writing [[com.flawlessyou.backend.entity.product.Product@1de89504, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-13T15:49:09.378+02:00 DEBUG 4076 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
