2025-03-18T13:44:12.010+02:00  INFO 15652 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 15652 (C:\Users\fatim\Desktop\university\year4-2\seminar\backend\target\classes started by fatima in C:\Users\fatim\Desktop\university\year4-2\seminar\backend)
2025-03-18T13:44:12.027+02:00 DEBUG 15652 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-18T13:44:12.031+02:00  INFO 15652 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-18T13:44:22.189+02:00  INFO 15652 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-18T13:44:22.257+02:00  INFO 15652 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-18T13:44:22.259+02:00  INFO 15652 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-18T13:44:22.676+02:00  INFO 15652 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-18T13:44:22.687+02:00  INFO 15652 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 10363 ms
2025-03-18T13:44:27.522+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:27.529+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:27.826+02:00 DEBUG 15652 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-18T13:44:27.828+02:00 DEBUG 15652 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-18T13:44:27.896+02:00  INFO 15652 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-18T13:44:28.208+02:00  INFO 15652 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-18T13:44:28.210+02:00  WARN 15652 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-18T13:44:31.554+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.563+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.591+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.643+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.659+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.675+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.686+02:00 DEBUG 15652 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T13:44:31.701+02:00 DEBUG 15652 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 57 mappings in 'requestMappingHandlerMapping'
2025-03-18T13:44:32.712+02:00 DEBUG 15652 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-18T13:44:33.557+02:00  INFO 15652 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-18T13:44:34.303+02:00 DEBUG 15652 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-18T13:44:34.751+02:00 DEBUG 15652 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-18T13:44:35.060+02:00 DEBUG 15652 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-18T13:44:37.386+02:00  INFO 15652 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-18T13:44:37.491+02:00  INFO 15652 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 27.738 seconds (process running for 30.642)
2025-03-18T13:44:37.675+02:00  INFO 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-18T13:44:37.677+02:00  INFO 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-18T13:44:37.679+02:00 DEBUG 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-18T13:44:37.679+02:00 DEBUG 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-18T13:44:37.680+02:00 DEBUG 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-18T13:44:37.686+02:00 DEBUG 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2e96489b
2025-03-18T13:44:37.690+02:00 DEBUG 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@3fcb737
2025-03-18T13:44:37.692+02:00 DEBUG 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-18T13:44:37.695+02:00  INFO 15652 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2025-03-18T13:54:57.980+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T13:54:58.155+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T13:54:58.240+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T13:54:58.265+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T13:54:58.284+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T13:54:58.755+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@4ef92d7e]
2025-03-18T13:54:59.529+02:00  WARN 15652 --- [http-nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fat@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@dee68c4,.*]; default message [must be a well-formed email address]] ]
2025-03-18T13:54:59.536+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T13:54:59.593+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T13:54:59.599+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T13:54:59.601+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T13:54:59.606+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T13:54:59.666+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:54:59.677+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 13:54:59 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T13:54:59.770+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T13:54:59.775+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T13:55:37.303+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T13:55:37.307+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T13:55:37.309+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T13:55:37.309+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T13:55:37.313+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T13:55:37.320+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@4aa00763]
2025-03-18T13:55:42.848+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:43.029+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-18T13:55:43.126+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:43.126+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@1d5d0f5e]
2025-03-18T13:55:43.136+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:43.219+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-18T13:55:43.540+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:43.552+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-18T13:55:43.554+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-18T13:55:43.558+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-18T13:55:43.585+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:44.241+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:44.241+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@17caccae]
2025-03-18T13:55:44.247+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:45.081+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T13:55:45.143+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T13:55:45.143+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T13:55:45.237+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T13:55:45.342+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T13:55:45.552+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:45.558+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T13:55:45.560+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T13:55:45.562+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T13:55:45.579+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:46.087+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:46.091+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T13:55:46.093+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T13:55:46.093+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T13:55:46.109+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:46.287+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:46.296+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T13:55:46.296+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:46.302+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T13:55:46.325+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T13:55:46.332+02:00  INFO 15652 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:46.344+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T13:55:46.340+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T13:55:46.356+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T13:55:46.356+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T13:55:46.364+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T13:55:46.366+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T13:55:46.398+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:46.410+02:00  INFO 15652 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:46.432+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:48.042+02:00  WARN 15652 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:48.102+02:00  WARN 15652 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:48.799+02:00  WARN 15652 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:48.809+02:00  WARN 15652 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:48.918+02:00  WARN 15652 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:49.416+02:00  WARN 15652 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:49.678+02:00  WARN 15652 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:49.692+02:00  WARN 15652 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:49.732+02:00  WARN 15652 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:49.748+02:00  WARN 15652 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:49.811+02:00  WARN 15652 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:50.199+02:00  WARN 15652 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:50.465+02:00  WARN 15652 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:50.469+02:00  WARN 15652 --- [http-nio-8080-exec-5] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:50.541+02:00  WARN 15652 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:50.564+02:00  WARN 15652 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:50.638+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:50.640+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@6fb3432c, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T13:55:50.663+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:50.894+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:50.991+02:00  WARN 15652 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:51.269+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:51.273+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@478b7bd2, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T13:55:51.277+02:00  WARN 15652 --- [http-nio-8080-exec-8] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:51.279+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:51.444+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:51.449+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:51.455+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T13:55:51.465+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:51.493+02:00  WARN 15652 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:51.523+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:51.599+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:51.816+02:00  WARN 15652 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T13:55:51.838+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:51.840+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@52119bc9, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T13:55:51.854+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:52.129+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:52.129+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@54b69164, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T13:55:52.135+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:52.198+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:52.251+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:52.301+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:52.301+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:52.301+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T13:55:52.301+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:52.321+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:52.384+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:52.391+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@4416895b, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T13:55:52.394+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:52.629+02:00  INFO 15652 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:52.644+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:52.644+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T13:55:52.644+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:52.660+02:00  INFO 15652 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:52.841+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:52.992+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:53.008+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:53.008+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T13:55:53.008+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:53.008+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:53.122+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:53.122+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:53.122+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:53.218+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:54.550+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:54.562+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T13:55:54.562+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T13:55:54.562+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:54.565+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:54.566+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:54.566+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:54.568+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:54.572+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:54.574+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:54.580+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:54.616+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:54.616+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:54.722+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:54.725+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:54.725+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T13:55:54.728+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:54.744+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:55.377+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:55.377+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:55.377+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:55.436+02:00  INFO 15652 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:55.443+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:55.443+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T13:55:55.443+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:55.461+02:00  INFO 15652 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:55.476+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:55.476+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:55.476+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T13:55:55.483+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:55.495+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:55.552+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:55.707+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:55.707+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:55.707+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:55.993+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:56.182+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:56.182+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:56.182+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:56.216+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:56.290+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:56.293+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:56.293+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T13:55:56.297+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:56.311+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:56.373+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:56.383+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T13:55:56.385+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T13:55:56.408+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:56.462+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:56.775+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:56.777+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:56.780+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:56.924+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:56.978+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:56.981+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:56.982+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:57.012+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:57.014+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:57.020+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:57.024+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T13:55:57.028+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:57.043+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:57.309+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:57.313+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:57.313+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T13:55:57.318+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:57.329+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:57.756+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:57.756+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:57.756+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:57.794+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:57.803+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:57.803+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T13:55:57.803+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:57.812+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:57.825+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:57.825+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:57.825+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:57.921+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:57.952+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:58.109+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:58.111+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:58.111+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:58.135+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:55:58.630+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:58.630+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:58.633+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:58.651+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:55:58.698+02:00  INFO 15652 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:58.704+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:58.706+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T13:55:58.706+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:58.715+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:58.719+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T13:55:58.721+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T13:55:58.723+02:00  INFO 15652 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:58.723+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:58.740+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:58.763+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:58.765+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:55:58.769+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T13:55:58.771+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:58.784+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:58.918+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:58.933+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:58.934+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:55:58.972+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:55:59.478+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:59.481+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:55:59.481+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T13:55:59.486+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:59.499+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:59.640+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:55:59.640+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:55:59.654+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T13:55:59.654+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:55:59.664+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:55:59.997+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:55:59.997+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:55:59.997+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:00.098+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:00.098+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:00.098+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:00.107+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:56:00.146+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:56:00.286+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:00.289+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:00.291+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:00.299+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:00.299+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:00.303+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:00.352+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:00.356+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:00.360+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:00.360+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:56:00.360+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T13:56:00.360+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:00.374+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:00.447+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:00.457+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T13:56:00.459+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T13:56:00.459+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:00.463+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:00.542+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:00.542+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:00.542+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:00.621+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:00.643+02:00  INFO 15652 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:00.645+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:00.645+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T13:56:00.647+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:00.653+02:00  INFO 15652 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:00.681+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:00.684+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:00.684+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T13:56:00.684+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:00.696+02:00  INFO 15652 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:00.811+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:00.826+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:00.826+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T13:56:00.826+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:00.832+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:00.953+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:00.959+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:00.959+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:01.016+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:01.016+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:01.026+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:01.175+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:01.177+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:01.177+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:01.206+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:01.206+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:01.436+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:01.438+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:01.438+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:01.438+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:01.438+02:00  INFO 15652 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:01.438+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:01.438+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:01.444+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:01.446+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T13:56:01.450+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:01.464+02:00  INFO 15652 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:01.622+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:01.624+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T13:56:01.625+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T13:56:01.626+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:01.639+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:01.906+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:01.995+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:01.997+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:01.999+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:02.016+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.016+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.022+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.119+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:02.119+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.119+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T13:56:02.124+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:02.126+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:02.262+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:02.262+02:00  INFO 15652 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:02.262+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:02.262+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.262+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:02.262+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T13:56:02.274+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:02.280+02:00  INFO 15652 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:02.353+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:02.355+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.355+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.358+02:00  INFO 15652 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:02.360+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T13:56:02.362+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:02.360+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.364+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T13:56:02.366+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:02.374+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:02.378+02:00  INFO 15652 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:02.612+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:02.612+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:02.612+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:02.692+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:02.692+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:02.692+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T13:56:02.692+02:00 DEBUG 15652 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:02.692+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T13:56:02.692+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T13:56:02.704+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T13:56:02.712+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T13:56:02.915+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:02.918+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:02.920+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:03.028+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:03.028+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:03.028+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T13:56:03.393+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T13:56:03.406+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T13:56:03.409+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:07:59.128+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:07:59.215+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:07:59.235+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:07:59.241+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:07:59.250+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:07:59.309+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@5fbd2825]
2025-03-18T14:08:02.366+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:08:02.366+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@1f67c636]
2025-03-18T14:08:02.381+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:08:02.569+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:08:02.585+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:08:02.585+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:08:02.588+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:08:02.588+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:08:02.593+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@68dc9ad4]
2025-03-18T14:08:02.822+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:08:02.822+02:00  WARN 15652 --- [http-nio-8080-exec-6] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:08:02.822+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:08:02.854+02:00 ERROR 15652 --- [http-nio-8080-exec-6] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:08:02.950+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:08:02.981+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@233642df]
2025-03-18T14:08:02.986+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:11:36.628+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:11:36.640+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:11:36.644+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:11:36.644+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:11:36.644+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:11:36.650+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@6fb38bcd]
2025-03-18T14:11:37.905+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:11:37.905+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@7a6f3f11]
2025-03-18T14:11:37.905+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:11:37.938+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:11:37.954+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:11:37.956+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:11:37.956+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:11:37.956+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:11:37.956+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@77521625]
2025-03-18T14:11:38.445+02:00  INFO 15652 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:11:38.445+02:00  WARN 15652 --- [http-nio-8080-exec-7] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:11:38.445+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:11:38.445+02:00 ERROR 15652 --- [http-nio-8080-exec-7] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:11:38.471+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:11:38.471+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@4c70ae93]
2025-03-18T14:11:38.471+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:12:21.266+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:12:21.266+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:12:21.273+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:12:21.273+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:12:21.273+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:12:21.284+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@340ec6af]
2025-03-18T14:12:21.583+02:00  INFO 15652 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:12:21.583+02:00  WARN 15652 --- [http-nio-8080-exec-9] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:12:21.583+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:12:21.583+02:00 ERROR 15652 --- [http-nio-8080-exec-9] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:12:21.598+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:12:21.598+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@6b7558d2]
2025-03-18T14:12:21.614+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:12:27.211+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:12:27.227+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:12:27.231+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:12:27.231+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:12:27.236+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:12:27.241+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@3e9f34dc]
2025-03-18T14:12:27.470+02:00  INFO 15652 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:12:27.482+02:00  WARN 15652 --- [http-nio-8080-exec-8] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:12:27.482+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:12:27.482+02:00 ERROR 15652 --- [http-nio-8080-exec-8] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:12:27.508+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:12:27.513+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@22ef4a66]
2025-03-18T14:12:27.513+02:00 DEBUG 15652 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:13:08.423+02:00  INFO 15652 --- [http-nio-8080-exec-6] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [g_state={"i_l":0};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-03-18T14:13:08.536+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.html
2025-03-18T14:13:08.541+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:08.544+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.html
2025-03-18T14:13:08.547+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.html", parameters={}
2025-03-18T14:13:08.559+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:13:08.842+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:09.015+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-18T14:13:09.015+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-bundle.js
2025-03-18T14:13:09.020+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-initializer.js
2025-03-18T14:13:09.021+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.css
2025-03-18T14:13:09.023+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui.css
2025-03-18T14:13:09.025+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:09.029+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:09.030+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-18T14:13:09.031+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-bundle.js
2025-03-18T14:13:09.051+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:09.052+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:09.069+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:09.070+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-03-18T14:13:09.081+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-03-18T14:13:09.082+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.css
2025-03-18T14:13:09.086+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui.css
2025-03-18T14:13:09.118+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui.css", parameters={}
2025-03-18T14:13:09.096+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.css", parameters={}
2025-03-18T14:13:09.096+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:13:09.096+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:13:09.107+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-initializer.js
2025-03-18T14:13:09.144+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-03-18T14:13:09.135+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:13:09.142+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:13:09.172+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:13:09.227+02:00 DEBUG 15652 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:09.261+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:09.329+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:09.332+02:00 DEBUG 15652 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:09.525+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:10.041+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs/swagger-config
2025-03-18T14:13:10.044+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:10.047+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs/swagger-config
2025-03-18T14:13:10.053+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs/swagger-config", parameters={}
2025-03-18T14:13:10.067+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-03-18T14:13:10.137+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json]
2025-03-18T14:13:10.162+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-re (truncated)...]
2025-03-18T14:13:10.175+02:00 DEBUG 15652 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:13:10.279+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs
2025-03-18T14:13:10.300+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:13:10.306+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs
2025-03-18T14:13:10.310+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs", parameters={}
2025-03-18T14:13:10.320+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-03-18T14:13:10.395+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:13:11.621+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:11.621+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:11.703+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:11.703+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:11.820+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:11.820+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:11.830+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.Integer>
2025-03-18T14:13:11.831+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:11.854+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:11.854+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:11.856+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:12.018+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.018+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.021+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.021+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.021+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.044+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:13:12.044+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.051+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.060+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:12.061+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.062+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:12.097+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:13:12.099+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.101+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:13:12.101+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:12.101+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.101+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:12.157+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:12.158+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.159+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:12.166+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:13:12.168+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.168+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:13:12.170+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:12.170+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.170+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:12.201+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:13:12.203+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.205+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:13:12.205+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:13:12.205+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.205+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:13:12.214+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.231+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.277+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.277+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.281+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.283+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.285+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.289+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.290+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.295+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Role
2025-03-18T14:13:12.296+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.320+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.320+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.324+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.324+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.324+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.332+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.User
2025-03-18T14:13:12.335+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.341+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.345+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:12.345+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.345+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:12.362+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-18T14:13:12.366+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.368+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-18T14:13:12.374+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Role]
2025-03-18T14:13:12.376+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.376+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Role], com.flawlessyou.backend.entity.user.Role
2025-03-18T14:13:12.382+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.time.LocalDate]
2025-03-18T14:13:12.389+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.391+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.time.LocalDate], java.time.LocalDate
2025-03-18T14:13:12.420+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:12.421+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.422+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:12.430+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.455+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.501+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.501+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.501+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.501+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.501+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.501+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.501+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.501+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Gender
2025-03-18T14:13:12.501+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.531+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-18T14:13:12.533+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.537+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:12.540+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.541+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:12.547+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.553+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.555+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:12.555+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.559+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.566+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:12.571+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.575+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:12.578+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:12.578+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.580+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:12.588+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:12.588+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.588+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:12.588+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:12.593+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.593+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:12.599+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.611+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.632+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.635+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.639+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-18T14:13:12.641+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.641+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:12.641+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.641+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:12.663+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.669+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.675+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.676+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.676+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.682+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:13:12.682+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.686+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.690+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:12.690+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.690+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:12.693+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:13:12.693+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.693+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:13:12.699+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:12.702+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.704+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:12.706+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:12.710+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.710+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:12.722+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:13:12.722+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.722+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:13:12.728+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:12.728+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.728+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:12.737+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:13:12.738+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.738+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:13:12.740+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:13:12.740+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.741+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:13:12.744+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.770+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:12.838+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.848+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.857+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.859+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.865+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.882+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.888+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.920+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.926+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.928+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.928+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.931+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.938+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.940+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.942+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-18T14:13:12.942+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.969+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:12.971+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.974+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:12.976+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.976+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:12.983+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:12.988+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.990+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<org.springframework.web.multipart.MultipartFile>
2025-03-18T14:13:12.990+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:12.990+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class org.springframework.web.multipart.MultipartFile]
2025-03-18T14:13:13.000+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.020+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:13.024+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.024+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:13.024+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.024+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:13.031+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.035+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.037+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.037+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.059+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.059+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.061+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.065+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.069+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.070+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.082+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.088+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.092+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-18T14:13:13.095+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.109+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:13.116+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.120+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:13.122+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.122+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:13.122+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:13.122+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.131+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.142+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:13.142+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.143+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:13.147+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:13.149+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.153+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:13.159+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:13.159+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.159+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:13.161+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:13.172+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.172+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:13.176+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.194+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.228+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.246+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.266+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.275+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.286+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.288+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.345+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.349+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.372+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:13.374+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.388+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-18T14:13:13.390+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.418+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-18T14:13:13.432+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.469+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:13.508+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.574+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:13.643+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:13.668+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.701+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-18T14:13:13.726+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.740+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:13:13.742+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.749+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:13.758+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.765+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:13.773+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.775+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:13.785+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:13.791+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.805+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:13.809+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:13.811+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.811+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:13.829+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:13.838+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.842+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:13.846+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.861+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.880+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:13.885+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.890+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>
2025-03-18T14:13:13.891+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.892+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-18T14:13:13.894+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.895+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-18T14:13:13.911+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis
2025-03-18T14:13:13.912+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.919+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:13.932+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:13.937+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.941+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:13.945+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:13.946+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.957+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:13.960+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]]
2025-03-18T14:13:13.960+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.964+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]], java.util.Map
2025-03-18T14:13:13.973+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-18T14:13:13.973+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.975+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-18T14:13:13.990+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]]
2025-03-18T14:13:13.993+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:13.995+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]], java.util.List
2025-03-18T14:13:13.996+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:13:13.997+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.003+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:14.007+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.018+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:14.026+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.028+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:14.033+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:14.038+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.040+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:14.045+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.066+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.123+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.174+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.198+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-18T14:13:14.210+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.212+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.221+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.225+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.227+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.235+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:14.239+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.241+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:14.252+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.272+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.303+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<com.flawlessyou.backend.entity.routine.Routine>
2025-03-18T14:13:14.307+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.308+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.Routine]
2025-03-18T14:13:14.309+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.310+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.Routine], com.flawlessyou.backend.entity.routine.Routine
2025-03-18T14:13:14.311+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.314+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.319+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.320+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.324+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:14.325+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.326+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:14.339+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.357+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.375+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-18T14:13:14.376+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.378+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.381+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.387+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.407+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.409+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.411+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.413+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.413+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.418+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.SignupRequest
2025-03-18T14:13:14.418+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.421+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.425+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.426+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.428+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.444+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.446+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.446+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.451+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.454+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.456+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.458+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.459+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.460+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.463+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-18T14:13:14.468+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.476+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-18T14:13:14.482+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, gender, password, phoneNumber, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 15
            minLength: 10
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.509+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, gender, password, phoneNumber, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 15
            minLength: 10
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.539+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.543+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.544+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.544+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.546+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.554+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.LoginRequest
2025-03-18T14:13:14.555+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.557+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.560+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.570+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.572+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.578+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.589+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.611+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.613+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.622+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.624+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.625+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.629+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-18T14:13:14.633+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.636+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.637+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.639+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.653+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.657+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.659+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.659+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.661+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.735+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:14.736+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.742+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:14.742+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.758+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.760+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.764+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.765+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.766+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.773+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:14.773+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.788+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.793+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.793+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.795+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.795+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.801+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:14.802+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.809+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:14.814+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.815+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:14.817+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.820+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:14.823+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:14.824+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.848+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-18T14:13:14.851+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.854+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:13:14.855+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.856+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:13:14.857+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:14.861+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:14.861+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.863+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:14.936+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:13:14.938+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.940+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:13:14.941+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:14.941+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.943+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:14.948+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:14.954+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.955+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:14.961+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:13:14.961+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.965+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:13:14.973+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:14.975+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.978+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:14.990+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:13:14.993+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:14.995+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:13:14.995+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:13:14.998+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.001+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:13:15.007+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.025+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.211+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-18T14:13:15.213+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.318+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:15.322+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.324+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:15.324+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.326+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:15.340+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:15.344+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.355+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:15.355+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.357+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:15.367+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:15.368+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.440+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.card.Card
2025-03-18T14:13:15.442+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.446+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.449+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:15.455+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.457+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:15.471+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-18T14:13:15.476+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.480+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-18T14:13:15.544+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:15.545+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.549+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:15.559+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-18T14:13:15.588+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.596+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-18T14:13:15.626+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.690+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.789+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-18T14:13:15.803+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.806+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-18T14:13:15.809+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.810+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-18T14:13:15.812+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.817+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:15.819+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.824+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:15.854+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-18T14:13:15.858+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.867+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-18T14:13:15.874+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:15.890+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.896+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:15.910+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-18T14:13:15.912+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:15.923+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-18T14:13:15.929+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:15.961+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.055+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-18T14:13:16.059+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.065+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-18T14:13:16.073+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.075+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-18T14:13:16.079+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.092+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:16.092+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.092+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:16.126+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-18T14:13:16.158+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.170+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-18T14:13:16.173+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:16.174+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.176+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:16.200+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-18T14:13:16.211+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.217+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-18T14:13:16.230+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.290+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.329+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:16.333+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.354+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:16.355+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.356+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:16.357+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.359+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:16.389+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:16.389+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.391+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:16.391+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.393+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:16.411+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:16.420+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.422+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:16.424+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.436+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:16.474+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.lang.String>
2025-03-18T14:13:16.487+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.501+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:16.513+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.526+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:16.540+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:16.544+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.577+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.util.Map<java.lang.String, java.lang.String>>
2025-03-18T14:13:16.593+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.603+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]]
2025-03-18T14:13:16.620+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.627+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]], java.util.Map
2025-03-18T14:13:16.640+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:16.644+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.653+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:16.678+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-18T14:13:16.680+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.682+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:13:16.683+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.701+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:16.705+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.709+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:16.713+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.716+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:16.720+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:16.722+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.724+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:16.730+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:16.734+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.744+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:16.763+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:16.772+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.787+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:16.803+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.825+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.864+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:16.868+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.895+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:16.896+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.899+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.904+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:16.905+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.906+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:16.909+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:16.909+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.911+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:16.917+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:16.922+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.923+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:16.925+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:16.926+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.927+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:16.930+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.946+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:16.967+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:16.969+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.987+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-18T14:13:16.989+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.993+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:13:16.995+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:16.995+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:13:17.002+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.010+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:17.010+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.012+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:17.022+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:13:17.023+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.026+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:13:17.028+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:17.034+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.039+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:17.046+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:17.047+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.058+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:17.072+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:13:17.076+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.077+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:13:17.078+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:17.078+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.080+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:17.088+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:13:17.089+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.090+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:13:17.091+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:13:17.091+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.092+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:13:17.096+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.125+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.159+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.160+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.173+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-18T14:13:17.175+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.177+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:13:17.179+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.184+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:13:17.190+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.193+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:17.194+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.196+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:17.207+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:17.208+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.209+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:17.213+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:13:17.219+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.222+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:13:17.226+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:17.227+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.228+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:17.231+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.258+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.293+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.295+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.309+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-18T14:13:17.311+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.318+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:13:17.323+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.324+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:13:17.326+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.328+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:17.329+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.330+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:17.343+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:13:17.344+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.345+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:13:17.347+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:17.349+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.354+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:17.368+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:17.374+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.384+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:17.396+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:13:17.405+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.407+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:13:17.409+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:17.409+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.417+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:17.424+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:13:17.426+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.427+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:13:17.428+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:13:17.429+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.440+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:13:17.444+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.487+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.573+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-18T14:13:17.576+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.578+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.591+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:17.592+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.593+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:17.597+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:17.606+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.607+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:17.613+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.630+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.672+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.routine.RoutineTime, java.util.List<com.flawlessyou.backend.entity.product.Product>>
2025-03-18T14:13:17.674+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.674+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]]
2025-03-18T14:13:17.674+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.676+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]], java.util.List
2025-03-18T14:13:17.676+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:13:17.676+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.678+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:13:17.678+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.687+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:13:17.688+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.692+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:13:17.696+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:13:17.699+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.701+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:13:17.703+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:13:17.703+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.703+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:13:17.707+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:13:17.710+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.710+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:13:17.717+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:13:17.722+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.724+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:13:17.724+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:13:17.726+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.726+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:13:17.730+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:13:17.732+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.733+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:13:17.737+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:13:17.739+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.741+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:13:17.743+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.761+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:13:17.798+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:17.801+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.803+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:17.805+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.805+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:17.814+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.815+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.827+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:17.828+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.829+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:17.830+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.832+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:17.837+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.839+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.853+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:13:17.853+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.856+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:13:17.856+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.858+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:13:17.860+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.862+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.874+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.874+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.880+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.883+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.887+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.888+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.899+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:13:17.901+02:00 TRACE 15652 --- [http-nio-8080-exec-3] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@1ecf784f
2025-03-18T14:13:17.920+02:00  INFO 15652 --- [http-nio-8080-exec-3] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 7489 ms
2025-03-18T14:13:18.091+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, */*] and supported [application/json]
2025-03-18T14:13:18.113+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-03-18T14:13:18.122+02:00 DEBUG 15652 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:14:06.028+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:14:06.073+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:14:06.075+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:14:06.076+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:14:06.077+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:14:06.082+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@22c137de]
2025-03-18T14:15:17.266+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:15:17.268+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@3919c1df]
2025-03-18T14:15:17.271+02:00 DEBUG 15652 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-18T14:23:48.079+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:23:48.082+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:23:48.084+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:23:48.085+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:23:48.087+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:23:48.111+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@7bcf65d9]
2025-03-18T14:23:49.236+02:00  INFO 15652 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:23:49.237+02:00  WARN 15652 --- [http-nio-8080-exec-2] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:23:49.237+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:23:49.238+02:00 ERROR 15652 --- [http-nio-8080-exec-2] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:23:49.258+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:23:49.260+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@3aac117d]
2025-03-18T14:23:49.262+02:00 DEBUG 15652 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:23:54.664+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:23:54.667+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:23:54.669+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:23:54.671+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:23:54.672+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:23:54.675+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@58113250]
2025-03-18T14:23:54.935+02:00  INFO 15652 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:23:54.936+02:00  WARN 15652 --- [http-nio-8080-exec-5] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:23:54.937+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:23:54.938+02:00 ERROR 15652 --- [http-nio-8080-exec-5] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:23:54.951+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:23:54.952+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@68f6eb30]
2025-03-18T14:23:54.954+02:00 DEBUG 15652 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:25:08.557+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:25:08.601+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:25:08.608+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:25:08.608+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:25:08.608+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:25:08.618+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@78ca8f6e]
2025-03-18T14:25:08.896+02:00  INFO 15652 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:25:08.897+02:00  WARN 15652 --- [http-nio-8080-exec-6] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Empty encoded password
2025-03-18T14:25:08.899+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Failed to authenticate since password does not match stored value
2025-03-18T14:25:08.900+02:00 ERROR 15652 --- [http-nio-8080-exec-6] c.f.backend.controllers.AuthController   : Authentication failed: Invalid username or password

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.4.2.jar:6.4.2]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.controllers.AuthController.authenticateUser(AuthController.java:65) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at com.flawlessyou.backend.Security.Jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:58) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:198) ~[spring-security-oauth2-client-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-03-18T14:25:08.915+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:25:08.918+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@685bcf5]
2025-03-18T14:25:08.921+02:00 DEBUG 15652 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 401 UNAUTHORIZED
2025-03-18T14:29:40.364+02:00  INFO 5084 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 5084 (C:\Users\fatim\Desktop\university\year4-2\seminar\backend\target\classes started by fatima in C:\Users\fatim\Desktop\university\year4-2\seminar\backend)
2025-03-18T14:29:40.378+02:00 DEBUG 5084 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-18T14:29:40.383+02:00  INFO 5084 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-18T14:29:50.286+02:00  INFO 5084 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-18T14:29:50.347+02:00  INFO 5084 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-18T14:29:50.348+02:00  INFO 5084 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-18T14:29:50.659+02:00  INFO 5084 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-18T14:29:50.661+02:00  INFO 5084 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 10036 ms
2025-03-18T14:29:55.046+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:55.051+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:55.309+02:00 DEBUG 5084 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-18T14:29:55.310+02:00 DEBUG 5084 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-18T14:29:55.384+02:00  INFO 5084 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-18T14:29:55.697+02:00  INFO 5084 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-18T14:29:55.702+02:00  WARN 5084 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-18T14:29:58.506+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.510+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.512+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.515+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.530+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.534+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.549+02:00 DEBUG 5084 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:29:58.563+02:00 DEBUG 5084 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 57 mappings in 'requestMappingHandlerMapping'
2025-03-18T14:29:59.180+02:00 DEBUG 5084 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-18T14:29:59.993+02:00  INFO 5084 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-18T14:30:00.879+02:00 DEBUG 5084 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-18T14:30:01.491+02:00 DEBUG 5084 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-18T14:30:01.805+02:00 DEBUG 5084 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-18T14:30:03.944+02:00  INFO 5084 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-18T14:30:03.999+02:00  INFO 5084 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 25.927 seconds (process running for 29.029)
2025-03-18T14:30:04.504+02:00  INFO 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-18T14:30:04.507+02:00  INFO 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-18T14:30:04.508+02:00 DEBUG 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-18T14:30:04.509+02:00 DEBUG 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-18T14:30:04.510+02:00 DEBUG 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-18T14:30:04.513+02:00 DEBUG 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2e96489b
2025-03-18T14:30:04.515+02:00 DEBUG 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@3fcb737
2025-03-18T14:30:04.516+02:00 DEBUG 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-18T14:30:04.518+02:00  INFO 5084 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-03-18T14:30:35.305+02:00  INFO 5084 --- [http-nio-8080-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [g_state={"i_l":0};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-03-18T14:30:35.448+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:30:35.562+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:30:35.593+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:30:35.608+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:30:35.615+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:30:35.899+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@20c5b104]
2025-03-18T14:31:02.598+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:31:02.602+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@47db43ee]
2025-03-18T14:31:02.639+02:00 DEBUG 5084 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:36:38.720+02:00  INFO 8352 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 8352 (C:\Users\fatim\Desktop\university\year4-2\seminar\backend\target\classes started by fatima in C:\Users\fatim\Desktop\university\year4-2\seminar\backend)
2025-03-18T14:36:38.726+02:00 DEBUG 8352 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-18T14:36:38.728+02:00  INFO 8352 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-18T14:36:51.319+02:00  INFO 8352 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-18T14:36:51.379+02:00  INFO 8352 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-18T14:36:51.381+02:00  INFO 8352 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-18T14:36:51.735+02:00  INFO 8352 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-18T14:36:51.737+02:00  INFO 8352 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 12826 ms
2025-03-18T14:36:55.946+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:55.949+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:56.142+02:00 DEBUG 8352 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-18T14:36:56.143+02:00 DEBUG 8352 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-18T14:36:56.212+02:00  INFO 8352 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-18T14:36:56.540+02:00  INFO 8352 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-18T14:36:56.543+02:00  WARN 8352 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-18T14:36:58.929+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.935+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.938+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.941+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.960+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.963+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.976+02:00 DEBUG 8352 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:36:58.996+02:00 DEBUG 8352 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 57 mappings in 'requestMappingHandlerMapping'
2025-03-18T14:36:59.969+02:00 DEBUG 8352 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-18T14:37:00.911+02:00  INFO 8352 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-18T14:37:01.871+02:00 DEBUG 8352 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-18T14:37:02.426+02:00 DEBUG 8352 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-18T14:37:02.817+02:00 DEBUG 8352 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-18T14:37:05.277+02:00  INFO 8352 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-18T14:37:05.396+02:00  INFO 8352 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 29.508 seconds (process running for 32.842)
2025-03-18T14:37:06.497+02:00  INFO 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-18T14:37:06.499+02:00  INFO 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-18T14:37:06.503+02:00 DEBUG 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-18T14:37:06.504+02:00 DEBUG 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-18T14:37:06.504+02:00 DEBUG 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-18T14:37:06.508+02:00 DEBUG 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@16f15a4
2025-03-18T14:37:06.511+02:00 DEBUG 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5feaafb3
2025-03-18T14:37:06.513+02:00 DEBUG 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-18T14:37:06.515+02:00  INFO 8352 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-03-18T14:37:12.160+02:00  INFO 8352 --- [http-nio-8080-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [g_state={"i_l":0};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-03-18T14:37:12.293+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.html
2025-03-18T14:37:12.354+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:12.378+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.html
2025-03-18T14:37:12.390+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.html", parameters={}
2025-03-18T14:37:12.403+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:12.484+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:12.666+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui.css
2025-03-18T14:37:12.666+02:00 DEBUG 8352 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/index.css
2025-03-18T14:37:12.678+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-18T14:37:12.679+02:00 DEBUG 8352 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-ui-bundle.js
2025-03-18T14:37:12.685+02:00 DEBUG 8352 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/swagger-initializer.js
2025-03-18T14:37:12.709+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:12.688+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:12.691+02:00 DEBUG 8352 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:12.711+02:00 DEBUG 8352 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:12.711+02:00 DEBUG 8352 --- [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:12.712+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-standalone-preset.js
2025-03-18T14:37:12.713+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui.css
2025-03-18T14:37:12.717+02:00 DEBUG 8352 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/index.css
2025-03-18T14:37:12.720+02:00 DEBUG 8352 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-ui-bundle.js
2025-03-18T14:37:12.725+02:00 DEBUG 8352 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/swagger-initializer.js
2025-03-18T14:37:12.726+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-03-18T14:37:12.727+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui.css", parameters={}
2025-03-18T14:37:12.729+02:00 DEBUG 8352 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/index.css", parameters={}
2025-03-18T14:37:12.730+02:00 DEBUG 8352 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-03-18T14:37:12.731+02:00 DEBUG 8352 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-03-18T14:37:12.738+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:12.741+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:12.742+02:00 DEBUG 8352 --- [http-nio-8080-exec-5] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:12.744+02:00 DEBUG 8352 --- [http-nio-8080-exec-6] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:12.745+02:00 DEBUG 8352 --- [http-nio-8080-exec-10] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:12.767+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:12.768+02:00 DEBUG 8352 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:12.782+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:12.882+02:00 DEBUG 8352 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:12.938+02:00 DEBUG 8352 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:13.582+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /swagger-ui/favicon-32x32.png
2025-03-18T14:37:13.584+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs/swagger-config
2025-03-18T14:37:13.594+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:13.597+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:13.600+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /swagger-ui/favicon-32x32.png
2025-03-18T14:37:13.601+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/swagger-ui/favicon-32x32.png", parameters={}
2025-03-18T14:37:13.601+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs/swagger-config
2025-03-18T14:37:13.613+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs/swagger-config", parameters={}
2025-03-18T14:37:13.616+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-03-18T14:37:13.631+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-03-18T14:37:13.660+02:00 DEBUG 8352 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:13.733+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json]
2025-03-18T14:37:13.746+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Writing [{configUrl=/v3/api-docs/swagger-config, oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-re (truncated)...]
2025-03-18T14:37:13.772+02:00 DEBUG 8352 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:13.924+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /v3/api-docs
2025-03-18T14:37:13.989+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:13.993+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /v3/api-docs
2025-03-18T14:37:14.002+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/v3/api-docs", parameters={}
2025-03-18T14:37:14.005+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-03-18T14:37:14.022+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:37:14.843+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:14.844+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:14.904+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:14.905+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:14.993+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:14.994+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.003+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.Integer>
2025-03-18T14:37:15.004+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.012+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:15.013+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.015+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:15.203+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:15.207+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.212+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:15.223+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.227+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:15.252+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:37:15.255+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.263+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.279+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:15.284+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.285+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:15.312+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:37:15.312+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.316+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:37:15.316+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:15.319+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.321+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:15.367+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:15.367+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.369+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:15.374+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:37:15.374+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.374+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:37:15.382+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:15.382+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.382+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:15.408+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:37:15.408+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.408+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:37:15.408+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:37:15.408+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.414+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:37:15.427+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.461+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.521+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:15.523+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.524+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:15.525+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.526+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:15.530+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:15.534+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.538+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Role
2025-03-18T14:37:15.541+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.569+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:15.570+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.573+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:15.576+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.579+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:15.588+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.User
2025-03-18T14:37:15.591+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.595+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.600+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:15.602+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.603+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:15.615+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-18T14:37:15.619+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.621+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-18T14:37:15.629+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Role]
2025-03-18T14:37:15.630+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.634+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Role], com.flawlessyou.backend.entity.user.Role
2025-03-18T14:37:15.645+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.time.LocalDate]
2025-03-18T14:37:15.646+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.652+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.time.LocalDate], java.time.LocalDate
2025-03-18T14:37:15.681+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:15.684+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.687+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:15.704+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.733+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel User class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, role=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, profilePicture=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, dateOfBirth=class JsonSchema {
        class Schema {
            type: [string]
            format: date
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysisHistoryIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, savedProductIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviewIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.778+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:15.779+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.781+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:15.787+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.787+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:15.794+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:15.795+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.800+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.user.Gender
2025-03-18T14:37:15.802+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.818+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-18T14:37:15.820+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.821+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:15.823+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.825+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:15.830+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:15.832+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.840+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:15.840+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.844+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.855+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:15.857+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.857+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:15.861+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:15.863+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.868+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:15.874+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:15.874+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.874+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:15.881+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:15.888+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.905+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:15.909+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.923+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:15.950+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:15.957+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.970+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-18T14:37:15.973+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.977+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:15.979+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:15.982+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.008+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:16.010+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.012+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:16.013+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.014+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:16.024+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:37:16.024+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.028+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.031+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.037+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.041+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.041+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:37:16.041+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.049+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:37:16.053+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:16.053+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.053+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:16.061+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:16.063+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.065+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:16.075+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:37:16.078+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.078+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:37:16.080+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:16.082+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.084+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:16.089+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:37:16.089+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.089+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:37:16.089+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:37:16.089+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.089+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:37:16.097+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.116+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.146+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:16.148+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.150+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:16.154+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.156+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:16.162+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.162+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.172+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:16.172+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.172+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:16.184+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.184+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:16.188+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.188+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.188+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-18T14:37:16.188+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.204+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:16.204+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.204+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:16.216+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.220+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:16.226+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.226+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.236+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<org.springframework.web.multipart.MultipartFile>
2025-03-18T14:37:16.238+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.240+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class org.springframework.web.multipart.MultipartFile]
2025-03-18T14:37:16.242+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.255+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:16.255+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.255+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:16.263+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.265+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:16.269+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.269+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.269+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.269+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.285+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.285+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.295+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.295+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.305+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.305+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.322+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.322+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.328+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-18T14:37:16.328+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.347+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:16.349+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.355+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:16.357+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.357+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:16.361+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:16.363+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.367+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.371+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.373+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.375+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.375+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:16.375+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.379+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:16.391+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:16.391+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.393+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:16.395+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:16.395+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.397+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:16.401+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.411+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.435+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.435+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.437+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.437+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.437+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.443+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.455+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.455+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.466+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:16.466+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.472+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve interface org.springframework.web.multipart.MultipartFile
2025-03-18T14:37:16.472+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.490+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<java.lang.String>
2025-03-18T14:37:16.492+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.492+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.496+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.498+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.504+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:16.506+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.527+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-18T14:37:16.527+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.529+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:37:16.539+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.539+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:16.542+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.544+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.546+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.547+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.557+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:16.559+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.559+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:16.572+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:16.572+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.572+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:16.579+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:16.579+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.585+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:16.589+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.600+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.624+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:16.624+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.628+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.treatments.Problem, java.lang.Double>
2025-03-18T14:37:16.628+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.630+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-18T14:37:16.632+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.636+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-18T14:37:16.658+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.SkinAnalysis.SkinAnalysis
2025-03-18T14:37:16.658+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.670+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.674+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.674+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.678+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.683+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:16.685+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.687+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:16.689+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]]
2025-03-18T14:37:16.689+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.691+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class com.flawlessyou.backend.entity.treatments.Problem] -> [simple type, class java.lang.Double]], java.util.Map
2025-03-18T14:37:16.691+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Double]
2025-03-18T14:37:16.691+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.694+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Double], java.lang.Double
2025-03-18T14:37:16.700+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]]
2025-03-18T14:37:16.700+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.700+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]], java.util.List
2025-03-18T14:37:16.700+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:37:16.700+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.709+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:16.709+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.720+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:16.720+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.720+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:16.725+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:16.725+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.729+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:16.737+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.751+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.787+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.808+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel SkinAnalysis class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skintype=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problems=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [number]
                    format: double
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, treatmentId=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, imageUrl=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.837+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-18T14:37:16.840+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.842+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.855+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.857+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.859+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.868+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:16.872+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.872+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:16.884+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.899+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.940+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<com.flawlessyou.backend.entity.routine.Routine>
2025-03-18T14:37:16.942+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.946+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.Routine]
2025-03-18T14:37:16.952+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.956+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.Routine], com.flawlessyou.backend.entity.routine.Routine
2025-03-18T14:37:16.958+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.960+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:16.962+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.962+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:16.970+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:16.970+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:16.972+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:16.977+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:16.995+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.013+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-18T14:37:17.015+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.017+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.019+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.019+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.036+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.036+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.038+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.038+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.042+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.042+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.SignupRequest
2025-03-18T14:37:17.046+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.074+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.074+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.074+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.074+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.094+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.094+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.096+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.101+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.103+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.105+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.105+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.105+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.105+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.112+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.user.Gender]
2025-03-18T14:37:17.115+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.117+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.user.Gender], com.flawlessyou.backend.entity.user.Gender
2025-03-18T14:37:17.121+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, gender, password, phoneNumber, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 15
            minLength: 10
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.136+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel SignupRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [email, gender, password, phoneNumber, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 20
            minLength: 3
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, email=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 50
            minLength: 0
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 40
            minLength: 6
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, phoneNumber=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: 15
            minLength: 10
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, gender=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.156+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.160+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.160+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.162+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.162+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.175+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.Payload.Request.LoginRequest
2025-03-18T14:37:17.177+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.179+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.186+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.188+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.190+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.193+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.204+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel LoginRequest class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: [password, username]
    not: null
    properties: {username=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, password=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.224+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.224+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.226+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.226+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.226+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.232+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<java.lang.String, java.lang.String>
2025-03-18T14:37:17.234+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.238+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.240+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.240+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.281+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.302+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.306+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.306+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.320+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.352+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:17.374+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.420+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:17.438+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.465+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.475+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.477+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.481+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.489+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.495+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:17.503+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.521+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.529+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.533+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.537+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.537+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.543+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:17.543+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.563+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.563+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.569+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.571+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.571+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.571+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:17.571+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.595+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-18T14:37:17.602+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.608+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:37:17.610+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.618+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:37:17.624+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.629+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.634+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.640+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.715+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:37:17.715+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.719+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:37:17.719+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:17.721+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.721+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:17.743+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:17.743+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.745+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:17.760+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:37:17.760+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.762+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:37:17.762+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:17.764+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.766+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:17.776+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:37:17.782+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.784+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:37:17.786+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:37:17.790+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.792+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:37:17.794+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.814+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.849+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve int
2025-03-18T14:37:17.849+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.871+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.873+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.873+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.875+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.875+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.891+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:17.893+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.893+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:17.893+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.897+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:17.902+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:17.902+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.920+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.card.Card
2025-03-18T14:37:17.920+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.928+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:17.936+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:17.940+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.941+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:17.948+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-18T14:37:17.950+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.952+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-18T14:37:17.962+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:17.965+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.971+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:17.982+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-18T14:37:17.984+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:17.988+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-18T14:37:17.999+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.026+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.063+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-18T14:37:18.063+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.067+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-18T14:37:18.069+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.072+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-18T14:37:18.073+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.077+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.077+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.079+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.092+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-18T14:37:18.092+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.093+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-18T14:37:18.096+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:18.096+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.097+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:18.109+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-18T14:37:18.111+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.112+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-18T14:37:18.118+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.145+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.200+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.card.Card>
2025-03-18T14:37:18.203+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.205+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.card.Card]
2025-03-18T14:37:18.207+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.208+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.card.Card], com.flawlessyou.backend.entity.card.Card
2025-03-18T14:37:18.212+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.215+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.220+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.221+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.238+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.util.Date]
2025-03-18T14:37:18.240+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.244+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.util.Date], java.util.Date
2025-03-18T14:37:18.248+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:18.256+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.261+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:18.272+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class boolean]
2025-03-18T14:37:18.276+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.278+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class boolean], boolean
2025-03-18T14:37:18.300+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.320+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Card class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {id=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, senderId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, message=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, sentDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertReply=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, replyDate=class JsonSchema {
        class Schema {
            type: [string]
            format: date-time
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, expertName=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinAnalysiId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, edit=class JsonSchema {
        class Schema {
            type: [boolean]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.338+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:18.341+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.367+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:18.369+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.371+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:18.372+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.373+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:18.392+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:18.393+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.396+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:18.400+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.407+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:18.426+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:18.429+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.437+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:18.439+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.440+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:18.461+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.lang.String>
2025-03-18T14:37:18.463+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.464+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.465+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.468+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.474+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:18.475+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.493+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<java.util.Map<java.lang.String, java.lang.String>>
2025-03-18T14:37:18.495+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.495+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]]
2025-03-18T14:37:18.498+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.502+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.String]], java.util.Map
2025-03-18T14:37:18.503+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.505+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.505+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.525+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-18T14:37:18.527+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.540+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:37:18.542+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.543+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:18.544+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.547+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.551+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.552+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.556+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:18.557+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.558+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:18.561+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:18.563+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.563+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:18.566+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:18.567+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.568+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:18.573+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.577+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.591+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:18.592+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.605+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:18.606+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.608+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.610+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.611+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.612+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.614+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:18.620+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.622+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:18.626+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:18.627+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.627+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:18.635+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:18.636+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.638+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:18.640+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.659+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.673+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:18.674+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.692+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-18T14:37:18.694+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.695+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:37:18.697+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.699+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:37:18.703+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.705+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.706+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.706+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.711+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:37:18.712+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.718+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:37:18.721+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:18.721+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.723+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:18.729+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:18.729+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.738+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:18.750+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:37:18.757+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.761+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:37:18.767+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:18.771+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.776+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:18.783+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:37:18.788+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.791+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:37:18.793+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:37:18.795+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.795+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:37:18.804+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.831+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.857+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:18.857+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.887+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.treatments.Treatment>
2025-03-18T14:37:18.889+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.889+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Treatment]
2025-03-18T14:37:18.889+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.892+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Treatment], com.flawlessyou.backend.entity.treatments.Treatment
2025-03-18T14:37:18.894+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.896+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:18.901+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.903+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:18.909+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:18.911+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.911+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:18.918+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.treatments.Problem]
2025-03-18T14:37:18.925+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.927+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.treatments.Problem], com.flawlessyou.backend.entity.treatments.Problem
2025-03-18T14:37:18.929+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:18.938+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:18.940+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:18.942+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.958+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Treatment class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {treatmentId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, getdescription=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, problem=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:18.992+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:18.996+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.028+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.List<com.flawlessyou.backend.entity.product.Product>
2025-03-18T14:37:19.030+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.038+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:37:19.038+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.041+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:37:19.049+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.055+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:19.057+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.059+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:19.071+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:37:19.083+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.089+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:37:19.093+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:19.095+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.097+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:19.109+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:19.109+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.109+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:19.122+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:37:19.125+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.127+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:37:19.127+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:19.129+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.129+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:19.140+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:37:19.142+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.142+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:37:19.144+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:37:19.146+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.151+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:37:19.154+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.180+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.239+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class com.flawlessyou.backend.entity.routine.Routine
2025-03-18T14:37:19.251+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.257+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.273+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:19.279+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.285+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:19.299+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:19.307+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.311+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:19.327+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.386+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Routine class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {routineId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, userId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, productIds=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, timeAnalysis=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, analysisId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.426+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve java.util.Map<com.flawlessyou.backend.entity.routine.RoutineTime, java.util.List<com.flawlessyou.backend.entity.product.Product>>
2025-03-18T14:37:19.433+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.439+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]]
2025-03-18T14:37:19.439+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.439+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Product]], java.util.List
2025-03-18T14:37:19.439+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Product]
2025-03-18T14:37:19.439+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.439+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Product], com.flawlessyou.backend.entity.product.Product
2025-03-18T14:37:19.439+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: null
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.448+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.String]
2025-03-18T14:37:19.449+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.451+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.String], java.lang.String
2025-03-18T14:37:19.454+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]]
2025-03-18T14:37:19.454+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.454+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.product.Type]], java.util.List
2025-03-18T14:37:19.454+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.product.Type]
2025-03-18T14:37:19.454+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.454+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.product.Type], com.flawlessyou.backend.entity.product.Type
2025-03-18T14:37:19.481+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class java.lang.String]]
2025-03-18T14:37:19.482+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.483+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class java.lang.String]], java.util.List
2025-03-18T14:37:19.486+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]]
2025-03-18T14:37:19.486+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.486+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [map type; class java.util.Map, [simple type, class java.lang.String] -> [simple type, class java.lang.Integer]], java.util.Map
2025-03-18T14:37:19.486+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Integer]
2025-03-18T14:37:19.486+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.486+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Integer], java.lang.Integer
2025-03-18T14:37:19.499+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]]
2025-03-18T14:37:19.500+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.503+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [collection type; class java.util.List, contains [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]], java.util.List
2025-03-18T14:37:19.505+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime]
2025-03-18T14:37:19.505+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.505+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class com.flawlessyou.backend.entity.routine.RoutineTime], com.flawlessyou.backend.entity.routine.RoutineTime
2025-03-18T14:37:19.509+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.519+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : defineModel Product class Schema {
    type: null
    format: null
    $ref: null
    description: null
    title: null
    multipleOf: null
    maximum: null
    exclusiveMaximum: null
    minimum: null
    exclusiveMinimum: null
    maxLength: null
    minLength: null
    pattern: null
    maxItems: null
    minItems: null
    uniqueItems: null
    maxProperties: null
    minProperties: null
    required: null
    not: null
    properties: {productId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, name=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, skinType=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, description=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, ingredients=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, adminId=class JsonSchema {
        class Schema {
            type: [string]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, photos=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, reviews=class JsonSchema {
        class Schema {
            type: [object]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: class JsonSchema {
                class Schema {
                    type: [integer]
                    format: int32
                    $ref: null
                    description: null
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    not: null
                    properties: null
                    additionalProperties: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                    patternProperties: null
                    contains: null
                    $id: null
                    $anchor: null
                    $schema: null
                    $vocabulary: null
                    $dynamicAnchor: null
                    const: null
                    contentEncoding: null
                    contentMediaType: null
                    contentSchema: null
                    propertyNames: null
                    unevaluatedProperties: null
                    maxContains: null
                    minContains: null
                    additionalItems: null
                    unevaluatedItems: null
                    _if: null
                    _else: null
                    then: null
                    dependentRequired: null
                    dependentSchemas: null
                    $comment: null
                    prefixItems: null
                }
            }
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }, usageTime=class JsonSchema {
        class Schema {
            type: [array]
            format: null
            $ref: null
            description: null
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            not: null
            properties: null
            additionalProperties: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
            patternProperties: null
            contains: null
            $id: null
            $anchor: null
            $schema: null
            $vocabulary: null
            $dynamicAnchor: null
            const: null
            contentEncoding: null
            contentMediaType: null
            contentSchema: null
            propertyNames: null
            unevaluatedProperties: null
            maxContains: null
            minContains: null
            additionalItems: null
            unevaluatedItems: null
            _if: null
            _else: null
            then: null
            dependentRequired: null
            dependentSchemas: null
            $comment: null
            prefixItems: null
        }
    }}
    additionalProperties: null
    nullable: null
    readOnly: null
    writeOnly: null
    example: null
    externalDocs: null
    deprecated: null
    discriminator: null
    xml: null
}
2025-03-18T14:37:19.555+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:19.555+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.555+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:19.564+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.566+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:19.574+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.574+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.585+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:19.585+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.585+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:19.585+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.585+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:19.591+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.591+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.600+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve org.springframework.http.ResponseEntity<?>
2025-03-18T14:37:19.604+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.605+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve [simple type, class java.lang.Object]
2025-03-18T14:37:19.605+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.605+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.swagger.v3.core.jackson.ModelResolver  : Can't check class [simple type, class java.lang.Object], java.lang.Object
2025-03-18T14:37:19.611+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.611+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.625+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.625+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.629+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.629+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.633+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.636+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.644+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : resolve class java.lang.String
2025-03-18T14:37:19.645+02:00 TRACE 8352 --- [http-nio-8080-exec-2] i.s.v.c.c.ModelConverterContextImpl      : trying extension org.springdoc.core.converters.SortOpenAPIConverter@74d3b331
2025-03-18T14:37:19.655+02:00  INFO 8352 --- [http-nio-8080-exec-2] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 5489 ms
2025-03-18T14:37:19.745+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [application/json, */*] and supported [application/json]
2025-03-18T14:37:19.757+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 49, 46, 48, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-03-18T14:37:19.761+02:00 DEBUG 8352 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:37:38.124+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:37:38.169+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:38.172+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:37:38.174+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:37:38.175+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:37:38.247+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@2d0dc26]
2025-03-18T14:37:42.536+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:37:42.538+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@60bd73d1]
2025-03-18T14:37:42.538+02:00 DEBUG 8352 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:37:53.472+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:37:53.475+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:37:53.477+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:37:53.480+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:37:53.482+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:37:53.541+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@22411959]
2025-03-18T14:37:54.567+02:00  INFO 8352 --- [http-nio-8080-exec-4] c.f.backend.controllers.AuthController   : Encoded password: $2a$10$Mo8a6oq6tmO5fw2xSzmczebwSZCxc5wlcP.VA39DcLUEgcX0fA6DG
2025-03-18T14:37:54.938+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:37:54.939+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@789752b3]
2025-03-18T14:37:54.941+02:00 DEBUG 8352 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:43:38.614+02:00  INFO 12704 --- [main] c.f.backend.BackendApplication           : Starting BackendApplication using Java 21.0.2 with PID 12704 (C:\Users\fatim\Desktop\university\year4-2\seminar\backend\target\classes started by fatima in C:\Users\fatim\Desktop\university\year4-2\seminar\backend)
2025-03-18T14:43:38.623+02:00 DEBUG 12704 --- [main] c.f.backend.BackendApplication           : Running with Spring Boot v3.4.2, Spring v6.2.2
2025-03-18T14:43:38.628+02:00  INFO 12704 --- [main] c.f.backend.BackendApplication           : No active profile set, falling back to 1 default profile: "default"
2025-03-18T14:43:47.735+02:00  INFO 12704 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-03-18T14:43:47.823+02:00  INFO 12704 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-03-18T14:43:47.825+02:00  INFO 12704 --- [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-03-18T14:43:48.189+02:00  INFO 12704 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-03-18T14:43:48.191+02:00  INFO 12704 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 9345 ms
2025-03-18T14:43:52.488+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtSecret' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:52.491+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'bezkoder.app.jwtExpirationMs' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:52.748+02:00 DEBUG 12704 --- [main] o.s.w.f.ServerHttpObservationFilter      : Filter 'webMvcObservationFilter' configured for use
2025-03-18T14:43:52.749+02:00 DEBUG 12704 --- [main] c.f.b.Security.Jwt.AuthTokenFilter       : Filter 'authenticationJwtTokenFilter' configured for use
2025-03-18T14:43:52.819+02:00  INFO 12704 --- [main] com.flawlessyou.backend.config.GetUser   : GetUser bean created!
2025-03-18T14:43:53.134+02:00  INFO 12704 --- [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-03-18T14:43:53.137+02:00  WARN 12704 --- [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-03-18T14:43:55.334+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.337+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.341+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.345+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.361+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.371+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.swagger-ui.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.383+02:00 DEBUG 12704 --- [main] o.s.c.e.PropertySourcesPropertyResolver  : Found key 'springdoc.api-docs.path' in PropertySource 'environmentProperties' with value of type String
2025-03-18T14:43:55.399+02:00 DEBUG 12704 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : 57 mappings in 'requestMappingHandlerMapping'
2025-03-18T14:43:56.123+02:00 DEBUG 12704 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-03-18T14:43:56.939+02:00  INFO 12704 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path '/actuator'
2025-03-18T14:43:57.654+02:00 DEBUG 12704 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, AuthTokenFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-03-18T14:43:58.333+02:00 DEBUG 12704 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-03-18T14:43:58.599+02:00 DEBUG 12704 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-03-18T14:44:00.708+02:00  INFO 12704 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-03-18T14:44:00.804+02:00  INFO 12704 --- [main] c.f.backend.BackendApplication           : Started BackendApplication in 24.565 seconds (process running for 27.735)
2025-03-18T14:44:03.069+02:00  INFO 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-03-18T14:44:03.071+02:00  INFO 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-03-18T14:44:03.072+02:00 DEBUG 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-03-18T14:44:03.073+02:00 DEBUG 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-03-18T14:44:03.074+02:00 DEBUG 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-03-18T14:44:03.077+02:00 DEBUG 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@35630ee8
2025-03-18T14:44:03.080+02:00 DEBUG 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@669469c9
2025-03-18T14:44:03.083+02:00 DEBUG 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-03-18T14:44:03.084+02:00  INFO 12704 --- [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-03-18T14:45:06.457+02:00  INFO 12704 --- [http-nio-8080-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [g_state={"i_l":0};] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-03-18T14:45:06.535+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:45:06.607+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:45:06.624+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:45:06.636+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:45:06.636+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:45:06.875+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@4a49f596]
2025-03-18T14:45:12.009+02:00  INFO 12704 --- [http-nio-8080-exec-1] c.f.backend.controllers.AuthController   : Encoded password: $2a$10$eGLhMV38iQUm6kAWm5YUg.Sz3S2P0wC0Qo1NKx7riV6X1GahdYzlq
2025-03-18T14:45:12.550+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:45:12.554+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@597c926b]
2025-03-18T14:45:12.602+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:45:46.657+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:45:46.666+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:45:46.670+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:45:46.685+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:45:46.687+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:45:46.712+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@10bc6a44]
2025-03-18T14:45:47.312+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:45:47.521+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-18T14:45:47.663+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:45:47.668+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@64125b4f]
2025-03-18T14:45:47.679+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:14.332+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T14:50:14.409+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:50:14.418+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T14:50:14.425+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T14:50:14.437+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T14:50:14.610+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@7ca67730]
2025-03-18T14:50:15.956+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:16.146+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-18T14:50:16.193+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:16.197+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@7445355]
2025-03-18T14:50:16.209+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:16.314+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-18T14:50:16.725+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:16.735+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-18T14:50:16.740+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-18T14:50:16.742+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-18T14:50:16.793+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:17.351+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:17.353+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@5b627fee]
2025-03-18T14:50:17.365+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:18.357+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T14:50:18.484+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T14:50:18.549+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T14:50:18.628+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T14:50:18.630+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:18.639+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T14:50:18.639+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T14:50:18.642+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T14:50:18.674+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T14:50:18.680+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:19.176+02:00  INFO 12704 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:19.176+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T14:50:19.184+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T14:50:19.184+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T14:50:19.205+02:00  INFO 12704 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:19.293+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:19.296+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T14:50:19.296+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T14:50:19.296+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T14:50:19.296+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:19.358+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:19.361+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T14:50:19.363+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T14:50:19.367+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T14:50:19.385+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:19.486+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:19.486+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T14:50:19.486+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T14:50:19.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T14:50:19.518+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:21.524+02:00  WARN 12704 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:21.760+02:00  WARN 12704 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:21.839+02:00  WARN 12704 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:21.886+02:00  WARN 12704 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:21.983+02:00  WARN 12704 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:22.309+02:00  WARN 12704 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:22.452+02:00  WARN 12704 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:22.532+02:00  WARN 12704 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:22.658+02:00  WARN 12704 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:22.660+02:00  WARN 12704 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:22.763+02:00  WARN 12704 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.119+02:00  WARN 12704 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.228+02:00  WARN 12704 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.321+02:00  WARN 12704 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.429+02:00  WARN 12704 --- [http-nio-8080-exec-9] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.432+02:00  WARN 12704 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.527+02:00  WARN 12704 --- [http-nio-8080-exec-7] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.895+02:00  WARN 12704 --- [http-nio-8080-exec-10] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:23.987+02:00  WARN 12704 --- [http-nio-8080-exec-1] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:24.099+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:24.099+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@21c56910, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T14:50:24.131+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:24.227+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:24.227+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@2440e607, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T14:50:24.247+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:24.250+02:00  WARN 12704 --- [http-nio-8080-exec-2] c.g.cloud.firestore.CustomClassMapper    : No setter/field for reviewIds found on class com.flawlessyou.backend.entity.product.Product
2025-03-18T14:50:24.290+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:24.300+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:24.314+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:24.316+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@40523ae5, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T14:50:24.326+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:24.360+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:24.670+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:24.691+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@10a4ee22, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T14:50:24.696+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:24.769+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:24.771+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[com.flawlessyou.backend.entity.product.Product@3ebc86cd, com.flawlessyou.backend.entity.product.Pro (truncated)...]
2025-03-18T14:50:24.776+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:24.808+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:24.808+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:25.027+02:00  INFO 12704 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:25.027+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:25.027+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T14:50:25.043+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:25.134+02:00  INFO 12704 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:25.171+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:25.171+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:25.171+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:25.171+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:25.171+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:25.171+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T14:50:25.178+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T14:50:25.178+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:25.180+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T14:50:25.180+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:25.182+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:25.182+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:25.193+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:25.193+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:25.196+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:25.586+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:25.586+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Z7YrDqHlTp615ubRAz0j/isSaved
2025-03-18T14:50:25.602+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Z7YrDqHlTp615ubRAz0j/isSaved", parameters={}
2025-03-18T14:50:25.604+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:25.611+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:25.972+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:25.972+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:25.978+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:26.116+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:26.390+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:26.390+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:26.390+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:26.524+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:26.677+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:26.677+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:26.677+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:26.715+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:26.724+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:26.724+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:26.724+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:26.740+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:26.740+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:26.740+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T14:50:26.746+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:26.761+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:26.789+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:26.910+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:26.911+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:26.915+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:26.935+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:27.149+02:00  INFO 12704 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:27.152+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:27.154+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T14:50:27.155+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:27.170+02:00  INFO 12704 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:27.311+02:00  INFO 12704 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:27.313+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:27.315+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T14:50:27.317+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:27.320+02:00  INFO 12704 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:27.542+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:27.542+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:27.542+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T14:50:27.558+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:27.590+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:27.595+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:27.595+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/R0HpmKkQYwUTNW4iPznu/isSaved
2025-03-18T14:50:27.595+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/R0HpmKkQYwUTNW4iPznu/isSaved", parameters={}
2025-03-18T14:50:27.605+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:27.618+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:28.107+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:28.109+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:28.111+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:28.166+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:28.397+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:28.397+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:28.397+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:28.415+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:28.506+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:28.506+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:28.509+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:28.526+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:28.755+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:28.757+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:28.759+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T14:50:28.761+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:28.771+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:28.947+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:28.947+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:28.951+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:29.041+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:29.041+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:29.047+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:29.084+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:29.091+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:29.141+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:29.143+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:29.146+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T14:50:29.148+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:29.158+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:29.212+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:29.216+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:29.216+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T14:50:29.220+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:29.235+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:29.540+02:00  INFO 12704 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:29.543+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:29.544+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T14:50:29.545+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:29.564+02:00  INFO 12704 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:29.904+02:00  INFO 12704 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:29.906+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /product/EH6qS1X5gEnsyjD8qlVM/isSaved
2025-03-18T14:50:29.909+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/product/EH6qS1X5gEnsyjD8qlVM/isSaved", parameters={}
2025-03-18T14:50:29.910+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:29.912+02:00  INFO 12704 --- [http-nio-8080-exec-5] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:29.992+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:29.994+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:29.998+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:30.146+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:30.705+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:30.705+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:30.705+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:30.705+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:30.705+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:30.705+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:30.752+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:30.763+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:30.765+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:30.838+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:30.847+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:30.847+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:30.866+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:30.866+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:30.866+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T14:50:30.873+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:30.881+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:30.948+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:30.948+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:30.952+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:30.975+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:31.149+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:31.165+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:31.165+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T14:50:31.165+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:31.165+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:31.483+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:31.495+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:31.497+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T14:50:31.499+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:31.499+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:31.621+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:31.621+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:31.621+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T14:50:31.628+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:31.636+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:31.673+02:00  INFO 12704 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:31.689+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/PMlN0cRSHjB8OOczyN2o/isSaved
2025-03-18T14:50:31.691+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/PMlN0cRSHjB8OOczyN2o/isSaved", parameters={}
2025-03-18T14:50:31.695+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:31.706+02:00  INFO 12704 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:31.988+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:31.989+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:31.991+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.043+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:32.045+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:32.049+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.049+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:32.052+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:32.054+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.056+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.094+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.109+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:32.111+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:32.112+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.117+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.158+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.239+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:32.241+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:32.251+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.286+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.396+02:00  INFO 12704 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:32.402+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:32.404+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.404+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T14:50:32.404+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.404+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T14:50:32.404+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:32.404+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:32.419+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:32.419+02:00  INFO 12704 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:32.447+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:32.449+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.449+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T14:50:32.449+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:32.465+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:32.477+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:32.479+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.479+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T14:50:32.479+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:32.491+02:00  INFO 12704 --- [http-nio-8080-exec-2] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:32.564+02:00  INFO 12704 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:32.570+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /product/df9q10dyohJWSJObEi6V/isSaved
2025-03-18T14:50:32.570+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/product/df9q10dyohJWSJObEi6V/isSaved", parameters={}
2025-03-18T14:50:32.574+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:32.585+02:00  INFO 12704 --- [http-nio-8080-exec-7] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:32.902+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:32.904+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:32.906+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.964+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:32.966+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:32.971+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:32.971+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.033+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.062+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.064+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.068+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:33.075+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.079+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.083+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:33.093+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.103+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.105+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.109+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:33.113+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.141+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.236+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:33.240+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.240+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T14:50:33.242+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:33.254+02:00  INFO 12704 --- [http-nio-8080-exec-10] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:33.345+02:00  INFO 12704 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:33.349+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.349+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T14:50:33.353+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:33.363+02:00  INFO 12704 --- [http-nio-8080-exec-8] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:33.411+02:00  INFO 12704 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:33.415+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.415+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T14:50:33.415+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:33.424+02:00  INFO 12704 --- [http-nio-8080-exec-3] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:33.456+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:33.466+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.466+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T14:50:33.466+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T14:50:33.466+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:33.466+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /product/Atn5pCQF7VR4KhJCzI4g/isSaved
2025-03-18T14:50:33.470+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/product/Atn5pCQF7VR4KhJCzI4g/isSaved", parameters={}
2025-03-18T14:50:33.472+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#isProductSaved(String, HttpServletRequest)
2025-03-18T14:50:33.478+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:33.484+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T14:50:33.794+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.806+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.806+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:33.806+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.811+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.813+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:33.869+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.869+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.869+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:33.985+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:33.996+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:33.996+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:50:34.062+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:50:34.062+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [true]
2025-03-18T14:50:34.062+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T14:51:05.748+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:51:05.751+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:51:05.752+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:51:05.753+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:51:05.754+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:51:05.758+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@501cca46]
2025-03-18T14:51:05.882+02:00  WARN 12704 --- [http-nio-8080-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T14:51:05.885+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:51:05.939+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T14:51:05.946+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T14:51:05.950+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T14:51:05.952+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T14:51:05.973+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:51:05.984+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 14:51:05 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T14:51:06.015+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T14:51:06.017+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:51:21.098+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:51:21.104+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:51:21.106+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:51:21.106+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:51:21.108+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:51:21.108+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@3cfb1b6f]
2025-03-18T14:51:21.120+02:00  WARN 12704 --- [http-nio-8080-exec-10] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T14:51:21.120+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:51:21.125+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T14:51:21.125+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T14:51:21.125+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T14:51:21.129+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T14:51:21.134+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:51:21.134+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 14:51:21 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T14:51:21.134+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T14:51:21.134+02:00 DEBUG 12704 --- [http-nio-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:52:10.209+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:52:10.211+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:52:10.213+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:52:10.215+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:52:10.215+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:52:10.215+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@39ee5692]
2025-03-18T14:52:10.228+02:00  WARN 12704 --- [http-nio-8080-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T14:52:10.228+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:52:10.228+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T14:52:10.228+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T14:52:10.236+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T14:52:10.236+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T14:52:10.236+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:52:10.236+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 14:52:10 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T14:52:10.242+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T14:52:10.242+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:52:15.468+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:52:15.468+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:52:15.468+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:52:15.468+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:52:15.468+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:52:15.468+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@6f38d4a7]
2025-03-18T14:52:15.484+02:00  WARN 12704 --- [http-nio-8080-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T14:52:15.487+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:52:15.491+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T14:52:15.500+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T14:52:15.500+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T14:52:15.508+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T14:52:15.508+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:52:15.508+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 14:52:15 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T14:52:15.508+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T14:52:15.516+02:00 DEBUG 12704 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:57:44.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:57:44.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:57:44.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:57:44.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:57:44.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:57:44.496+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@3435f39a]
2025-03-18T14:57:44.514+02:00  WARN 12704 --- [http-nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T14:57:44.514+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:57:44.514+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T14:57:44.514+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T14:57:44.523+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T14:57:44.523+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T14:57:44.527+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:57:44.533+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 14:57:44 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T14:57:44.533+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T14:57:44.533+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:57:53.238+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T14:57:53.242+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T14:57:53.245+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T14:57:53.248+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T14:57:53.249+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T14:57:53.253+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@52320b50]
2025-03-18T14:57:53.259+02:00  WARN 12704 --- [http-nio-8080-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T14:57:53.260+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T14:57:53.267+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T14:57:53.271+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T14:57:53.272+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T14:57:53.274+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T14:57:53.275+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T14:57:53.279+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 14:57:53 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T14:57:53.282+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T14:57:53.285+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T15:04:04.381+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T15:04:04.383+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T15:04:04.383+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T15:04:04.383+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T15:04:04.391+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T15:04:04.396+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@197ae66f]
2025-03-18T15:04:04.406+02:00  WARN 12704 --- [http-nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [fatima@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T15:04:04.411+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T15:04:04.416+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T15:04:04.428+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T15:04:04.429+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T15:04:04.431+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T15:04:04.436+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T15:04:04.437+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 15:04:04 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T15:04:04.446+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T15:04:04.446+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T15:04:43.621+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T15:04:43.626+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T15:04:43.628+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T15:04:43.630+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T15:04:43.630+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T15:04:43.635+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@f98b678]
2025-03-18T15:04:43.643+02:00  WARN 12704 --- [http-nio-8080-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'email': rejected value [ssrvgff@gmail.com ]; codes [Email.signupRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@1c572fd1,.*]; default message [must be a well-formed email address]] ]
2025-03-18T15:04:43.647+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T15:04:43.661+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T15:04:43.731+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T15:04:43.733+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T15:04:43.735+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T15:04:43.738+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T15:04:43.738+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 15:04:43 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T15:04:43.837+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T15:04:43.853+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:06:25.636+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T16:06:25.700+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:06:25.716+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T16:06:25.732+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T16:06:25.748+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T16:06:25.843+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@1d0380c1]
2025-03-18T16:06:25.985+02:00  WARN 12704 --- [http-nio-8080-exec-4] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'phoneNumber': rejected value [222222222]; codes [Size.signupRequest.phoneNumber,Size.phoneNumber,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.phoneNumber,phoneNumber]; arguments []; default message [phoneNumber],15,10]; default message [ the phone number size must be between 6 and 40]] ]
2025-03-18T16:06:25.985+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T16:06:26.019+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T16:06:26.025+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T16:06:26.028+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T16:06:26.033+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T16:06:26.075+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T16:06:26.095+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 16:06:26 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T16:06:26.134+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T16:06:26.136+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:06:35.235+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T16:06:35.237+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:06:35.237+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T16:06:35.237+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T16:06:35.237+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T16:06:35.249+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@61ab7d4c]
2025-03-18T16:06:35.252+02:00  WARN 12704 --- [http-nio-8080-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'phoneNumber': rejected value [222222222]; codes [Size.signupRequest.phoneNumber,Size.phoneNumber,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.phoneNumber,phoneNumber]; arguments []; default message [phoneNumber],15,10]; default message [ the phone number size must be between 6 and 40]] ]
2025-03-18T16:06:35.254+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T16:06:35.258+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T16:06:35.263+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T16:06:35.265+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T16:06:35.266+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T16:06:35.268+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T16:06:35.268+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 16:06:35 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T16:06:35.275+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T16:06:35.275+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:07:09.393+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/signup
2025-03-18T16:07:09.393+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:07:09.466+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/signup
2025-03-18T16:07:09.469+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/api/auth/signup", parameters={}
2025-03-18T16:07:09.609+02:00  WARN 12704 --- [http-nio-8080-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-03-18T16:07:09.613+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 405 METHOD_NOT_ALLOWED
2025-03-18T16:07:09.664+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-03-18T16:07:09.664+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-03-18T16:07:09.664+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for GET "/error", parameters={}
2025-03-18T16:07:09.675+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-03-18T16:07:11.589+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.w.s.v.ContentNegotiatingViewResolver : Selected 'text/html' given [text/html, text/html;q=0.8]
2025-03-18T16:07:11.871+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 405
2025-03-18T16:07:11.875+02:00 DEBUG 12704 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:07:12.230+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /favicon.ico
2025-03-18T16:07:12.230+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:07:12.502+02:00 ERROR 12704 --- [http-nio-8080-exec-9] c.f.b.Security.Jwt.AuthEntryPointJwt     : Unauthorized error: Full authentication is required to access this resource
2025-03-18T16:08:44.775+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T16:08:44.781+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:08:44.783+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T16:08:44.826+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T16:08:44.834+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T16:08:44.963+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.method.HandlerMethod             : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): JSON parse error: Unexpected character ('u' (code 117)): was expecting double-quote to start field name
2025-03-18T16:08:45.073+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Using @ExceptionHandler com.flawlessyou.backend.exception.CustomExceptionHandler#handleRuntimeException(RuntimeException)
2025-03-18T16:08:45.174+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-03-18T16:08:45.178+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Writing ["Error: JSON parse error: Unexpected character ('u' (code 117)): was expecting double-quote to start  (truncated)..."]
2025-03-18T16:08:45.200+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('u' (code 117)): was expecting double-quote to start field name]
2025-03-18T16:08:45.207+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 500 INTERNAL_SERVER_ERROR
2025-03-18T16:10:56.362+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T16:10:56.382+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:10:56.382+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T16:10:56.382+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T16:10:56.382+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T16:10:56.382+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@679c7fe2]
2025-03-18T16:10:56.410+02:00  WARN 12704 --- [http-nio-8080-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'phoneNumber': rejected value [222222222]; codes [Size.signupRequest.phoneNumber,Size.phoneNumber,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.phoneNumber,phoneNumber]; arguments []; default message [phoneNumber],15,10]; default message [ the phone number size must be between 6 and 40]] ]
2025-03-18T16:10:56.417+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T16:10:56.422+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T16:10:56.432+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T16:10:56.434+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T16:10:56.436+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T16:10:56.447+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T16:10:56.449+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 16:10:56 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T16:10:56.455+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T16:10:56.455+02:00 DEBUG 12704 --- [http-nio-8080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:11:08.078+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T16:11:08.078+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:11:08.078+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T16:11:08.078+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T16:11:08.095+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T16:11:08.095+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@35e48516]
2025-03-18T16:11:08.095+02:00  WARN 12704 --- [http-nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'phoneNumber': rejected value [222222222]; codes [Size.signupRequest.phoneNumber,Size.phoneNumber,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.phoneNumber,phoneNumber]; arguments []; default message [phoneNumber],15,10]; default message [ the phone number size must be between 6 and 40]] ]
2025-03-18T16:11:08.095+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T16:11:08.109+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T16:11:08.109+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T16:11:08.109+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T16:11:08.118+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T16:11:08.118+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T16:11:08.118+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 16:11:08 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T16:11:08.118+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T16:11:08.118+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:11:39.528+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T16:11:39.533+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T16:11:39.535+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T16:11:39.537+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T16:11:39.539+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T16:11:39.547+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@3cc39b95]
2025-03-18T16:11:39.554+02:00  WARN 12704 --- [http-nio-8080-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.flawlessyou.backend.controllers.AuthController.registerUser(com.flawlessyou.backend.Payload.Request.SignupRequest): [Field error in object 'signupRequest' on field 'phoneNumber': rejected value [222222222]; codes [Size.signupRequest.phoneNumber,Size.phoneNumber,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.phoneNumber,phoneNumber]; arguments []; default message [phoneNumber],15,10]; default message [ the phone number size must be between 6 and 40]] ]
2025-03-18T16:11:39.559+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 400 BAD_REQUEST
2025-03-18T16:11:39.563+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-03-18T16:11:39.568+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-03-18T16:11:39.569+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : "ERROR" dispatch for POST "/error", parameters={}
2025-03-18T16:11:39.570+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2025-03-18T16:11:39.576+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T16:11:39.586+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [{timestamp=Tue Mar 18 16:11:39 EET 2025, status=400, error=Bad Request, path=/api/auth/signup}]
2025-03-18T16:11:39.593+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Exiting from "ERROR" dispatch, status 400
2025-03-18T16:11:39.603+02:00 DEBUG 12704 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T17:20:12.247+02:00  WARN 12704 --- [RMI TCP Connection(5)-127.0.0.1] javax.management.remote.misc             : The server has decided to close this client connection.
2025-03-18T17:33:40.581+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T17:33:40.712+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T17:33:40.741+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T17:33:40.764+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T17:33:40.778+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T17:33:40.974+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@4787ef7e]
2025-03-18T17:33:44.564+02:00  INFO 12704 --- [http-nio-8080-exec-4] c.f.backend.controllers.AuthController   : Encoded password: $2a$10$DGlY1FUhSRteTr.GgJZfnux4ZNlp5X2ydk7111SUEBeEtxQtOdc/2
2025-03-18T17:33:44.896+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:33:44.927+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@c9f56a3]
2025-03-18T17:33:44.968+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T17:33:45.299+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T17:33:45.302+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T17:33:45.305+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T17:33:45.306+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T17:33:45.307+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T17:33:45.312+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@7412267f]
2025-03-18T17:33:45.603+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T17:33:45.767+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-18T17:33:45.806+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:33:45.808+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@1eb532b4]
2025-03-18T17:33:45.810+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T17:33:46.323+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-18T17:33:46.669+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T17:33:46.692+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-18T17:33:46.693+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-18T17:33:46.694+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-18T17:33:46.713+02:00  INFO 12704 --- [http-nio-8080-exec-9] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T17:33:47.136+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:33:47.140+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@6645532a]
2025-03-18T17:33:47.147+02:00 DEBUG 12704 --- [http-nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T17:39:54.448+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signup
2025-03-18T17:39:54.453+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T17:39:54.454+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signup
2025-03-18T17:39:54.456+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signup", parameters={}
2025-03-18T17:39:54.457+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#registerUser(SignupRequest)
2025-03-18T17:39:54.464+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.SignupRequest@402d6549]
2025-03-18T17:39:56.391+02:00  INFO 12704 --- [http-nio-8080-exec-2] c.f.backend.controllers.AuthController   : Encoded password: $2a$10$A/nSlbUcfFnqOuXKWInrdOIlh/7m.LgDQ6XhMKL9lhs.Cap72VwzW
2025-03-18T17:39:56.806+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:39:56.807+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.MessageResponse@3194a76f]
2025-03-18T17:39:56.810+02:00 DEBUG 12704 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T17:39:56.886+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /api/auth/signin
2025-03-18T17:39:56.888+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-03-18T17:39:56.890+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /api/auth/signin
2025-03-18T17:39:56.891+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/signin", parameters={}
2025-03-18T17:39:56.892+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.AuthController#authenticateUser(LoginRequest)
2025-03-18T17:39:56.896+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=utf-8" to [com.flawlessyou.backend.Payload.Request.LoginRequest@1cdd8e87]
2025-03-18T17:39:57.192+02:00  INFO 12704 --- [http-nio-8080-exec-1] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T17:39:57.366+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-03-18T17:39:57.373+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:39:57.375+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.Payload.Response.JwtResponse@641f8411]
2025-03-18T17:39:57.376+02:00 DEBUG 12704 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T17:39:57.408+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-03-18T17:39:57.742+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T17:39:57.759+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
2025-03-18T17:39:57.760+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/users/me", parameters={}
2025-03-18T17:39:57.763+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.UserController#getCurrentUser(HttpServletRequest)
2025-03-18T17:39:57.793+02:00  INFO 12704 --- [http-nio-8080-exec-4] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T17:39:58.213+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:39:58.214+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.flawlessyou.backend.entity.user.User@75e74a9f]
2025-03-18T17:39:58.216+02:00 DEBUG 12704 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-03-18T17:39:58.985+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /product/Saved
2025-03-18T17:39:59.373+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : User role: USER
2025-03-18T17:39:59.375+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /product/Saved
2025-03-18T17:39:59.376+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/product/Saved", parameters={}
2025-03-18T17:39:59.377+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.flawlessyou.backend.controllers.ProductController#getSavedProduct(HttpServletRequest)
2025-03-18T17:39:59.443+02:00  INFO 12704 --- [http-nio-8080-exec-6] com.flawlessyou.backend.config.GetUser   : Roles from token: [ROLE_USER]
2025-03-18T17:40:00.508+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-03-18T17:40:00.513+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [[]]
2025-03-18T17:40:00.517+02:00 DEBUG 12704 --- [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
